Agent pid 75081
Identity added: /home/kyle/.ssh/github-key (knguyen1193@outlook.com)
Already up to date.
[0.03ms] ".env"
bun install v1.3.0 (b0a6feca)

Checked 493 installs across 496 packages (no changes) [18.00ms]
Hono started in background (PID: 75114)
bun test v1.3.0 (b0a6feca)

src/tests/api/schedules-bun.test.ts:
[dotenv@17.2.3] injecting env (0) from .env -- tip: âœ… audit secrets and track compliance: https://dotenvx.com/ops
Loaded MODEL_PARSE: /home/kyle/.models/mistral-7b-instruct-v0.1.Q4_K_M.gguf
[]
User Input:  How are you doing?
classifyIntent is called
(fail) API Endpoint : POST /mcp/tools/process-query > should handle chit-chat query ("other" intent) [30001.77ms]
  ^ this test timed out after 30000ms.
[]
User Input:  What is 2 + 3 * 4?
classifyIntent is called
(fail) API Endpoint : POST /mcp/tools/process-query > should handle computational-math query ("other" intent) [30000.06ms]
  ^ this test timed out after 30000ms.
[{"text":"tomorrow at 10 AM","start":"2025-10-10T17:00:00.000Z","end":null}]
User Input:  Schedule a meeting tomorrow at 10 AM in PDT
classifyIntent is called
events is parsed with regex:  [
  {
    summary: "Event",
    date: "2025-10-10",
    startTime: "10:00",
    endTime: undefined,
    duration_minutes: 60,
    timezone: "America/Los_Angeles",
    location: "10 AM in PDT",
    displayTime: "10:00 am",
  }
]
Regex partial imperfect-refining with LLM
Ready to send Payload:  {
  partial: {
    events: [
      [Object ...]
    ],
    confirm: "Missing end time. Confirm default 60 minutes?",
  },
  input: "Schedule a meeting tomorrow at 10 AM in PDT",
  timezone: "America/Los_Angeles",
  reference_date: "2025-10-15",
  parsed_results: [
    {
      text: "tomorrow at 10 AM",
      start: "2025-10-10T17:00:00.000Z",
      end: null,
    }
  ],
}
(fail) API Endpoint : POST /mcp/tools/process-query > should handle single event add query ("add" intent) [30001.36ms]
  ^ this test timed out after 30000ms.
[{"text":"October 1, 2025 from 10am to 11am","start":"2025-10-01T17:00:00.000Z","end":"2025-10-01T18:00:00.000Z"},{"text":"October 2, 2025 from 12pm to 1pm","start":"2025-10-02T19:00:00.000Z","end":"2025-10-02T20:00:00.000Z"},{"text":"October 3, 2025 from 2pm to 3pm","start":"2025-10-03T21:00:00.000Z","end":"2025-10-03T22:00:00.000Z"},{"text":"October 4, 2025 from 6am to 7am","start":"2025-10-04T13:00:00.000Z","end":"2025-10-04T14:00:00.000Z"},{"text":"October 5, 2025 from 8pm to 10pm","start":"2025-10-06T03:00:00.000Z","end":"2025-10-06T05:00:00.000Z"},{"text":"October 6, 2025 from 9am to 12pm","start":"2025-10-06T16:00:00.000Z","end":"2025-10-06T19:00:00.000Z"},{"text":"October 7, 2025 from 7pm to 8pm","start":"2025-10-08T02:00:00.000Z","end":"2025-10-08T03:00:00.000Z"}]
User Input:  Add events: Meeting on October 1, 2025 from 10am to 11am at office; Lunch on October 2, 2025 from 12pm to 1pm at cafe; Call on October 3, 2025 from 2pm to 3pm; Workout on October 4, 2025 from 6am to 7am at gym; Movie on October 5, 2025 from 8pm to 10pm at theater; Hiking on October 6, 2025 from 9am to 12pm at park; Dinner on October 7, 2025 from 7pm to 8pm at home
classifyIntent is called
events is parsed with regex:  [
  {
    summary: "events: Meeting on October 1, 2025",
    date: "2025-10-01",
    startTime: "10:00",
    endTime: "11:00",
    duration_minutes: 60,
    timezone: "America/Los_Angeles",
    location: "office",
    displayTime: "10:00 am",
  }, {
    summary: "Lunch on October 2, 2025",
    date: "2025-10-02",
    startTime: "12:00",
    endTime: "13:00",
    duration_minutes: 60,
    timezone: "America/Los_Angeles",
    location: "cafe",
    displayTime: "12:00 pm",
  }, {
    summary: "Call on October 3, 2025",
    date: "2025-10-03",
    startTime: "14:00",
    endTime: "15:00",
    duration_minutes: 60,
    timezone: "America/Los_Angeles",
    location: null,
    displayTime: "14:00 pm",
  }, {
    summary: "Workout on October 4, 2025",
    date: "2025-10-04",
    startTime: "06:00",
    endTime: "07:00",
    duration_minutes: 60,
    timezone: "America/Los_Angeles",
    location: "gym",
    displayTime: "06:00 am",
  }, {
    summary: "Movie on October 5, 2025",
    date: "2025-10-05",
    startTime: "20:00",
    endTime: "22:00",
    duration_minutes: 120,
    timezone: "America/Los_Angeles",
    location: "theater",
    displayTime: "20:00 pm",
  }, {
    summary: "Hiking on October 6, 2025",
    date: "2025-10-06",
    startTime: "09:00",
    endTime: "12:00",
    duration_minutes: 180,
    timezone: "America/Los_Angeles",
    location: "park",
    displayTime: "09:00 am",
  }, {
    summary: "Dinner on October 7, 2025",
    date: "2025-10-07",
    startTime: "19:00",
    endTime: "20:00",
    duration_minutes: 60,
    timezone: "America/Los_Angeles",
    location: "home",
    displayTime: "19:00 pm",
  }
]
Regex partial imperfect-refining with LLM
Ready to send Payload:  {
  partial: [
    {
      summary: "events: Meeting on October 1, 2025",
      date: "2025-10-01",
      startTime: "10:00",
      endTime: "11:00",
      duration_minutes: 60,
      timezone: "America/Los_Angeles",
      location: "office",
      displayTime: "10:00 am",
    }, {
      summary: "Lunch on October 2, 2025",
      date: "2025-10-02",
      startTime: "12:00",
      endTime: "13:00",
      duration_minutes: 60,
      timezone: "America/Los_Angeles",
      location: "cafe",
      displayTime: "12:00 pm",
    }, {
      summary: "Call on October 3, 2025",
      date: "2025-10-03",
      startTime: "14:00",
      endTime: "15:00",
      duration_minutes: 60,
      timezone: "America/Los_Angeles",
      location: null,
      displayTime: "14:00 pm",
    }, {
      summary: "Workout on October 4, 2025",
      date: "2025-10-04",
      startTime: "06:00",
      endTime: "07:00",
      duration_minutes: 60,
      timezone: "America/Los_Angeles",
      location: "gym",
      displayTime: "06:00 am",
    }, {
      summary: "Movie on October 5, 2025",
      date: "2025-10-05",
      startTime: "20:00",
      endTime: "22:00",
      duration_minutes: 120,
      timezone: "America/Los_Angeles",
      location: "theater",
      displayTime: "20:00 pm",
    }, {
      summary: "Hiking on October 6, 2025",
      date: "2025-10-06",
      startTime: "09:00",
      endTime: "12:00",
      duration_minutes: 180,
      timezone: "America/Los_Angeles",
      location: "park",
      displayTime: "09:00 am",
    }, {
      summary: "Dinner on October 7, 2025",
      date: "2025-10-07",
      startTime: "19:00",
      endTime: "20:00",
      duration_minutes: 60,
      timezone: "America/Los_Angeles",
      location: "home",
      displayTime: "19:00 pm",
    }
  ],
  input: "Add events: Meeting on October 1, 2025 from 10am to 11am at office; Lunch on October 2, 2025 from 12pm to 1pm at cafe; Call on October 3, 2025 from 2pm to 3pm; Workout on October 4, 2025 from 6am to 7am at gym; Movie on October 5, 2025 from 8pm to 10pm at theater; Hiking on October 6, 2025 from 9am to 12pm at park; Dinner on October 7, 2025 from 7pm to 8pm at home",
  timezone: "America/Los_Angeles",
  reference_date: "2025-10-15",
  parsed_results: [
    {
      text: "October 1, 2025 from 10am to 11am",
      start: "2025-10-01T17:00:00.000Z",
      end: "2025-10-01T18:00:00.000Z",
    }, {
      text: "October 2, 2025 from 12pm to 1pm",
      start: "2025-10-02T19:00:00.000Z",
      end: "2025-10-02T20:00:00.000Z",
    }, {
      text: "October 3, 2025 from 2pm to 3pm",
      start: "2025-10-03T21:00:00.000Z",
      end: "2025-10-03T22:00:00.000Z",
    }, {
      text: "October 4, 2025 from 6am to 7am",
      start: "2025-10-04T13:00:00.000Z",
      end: "2025-10-04T14:00:00.000Z",
    }, {
      text: "October 5, 2025 from 8pm to 10pm",
      start: "2025-10-06T03:00:00.000Z",
      end: "2025-10-06T05:00:00.000Z",
    }, {
      text: "October 6, 2025 from 9am to 12pm",
      start: "2025-10-06T16:00:00.000Z",
      end: "2025-10-06T19:00:00.000Z",
    }, {
      text: "October 7, 2025 from 7pm to 8pm",
      start: "2025-10-08T02:00:00.000Z",
      end: "2025-10-08T03:00:00.000Z",
    }
  ],
}
Error in classifyIntent LLM fallback: error: The socket connection was closed unexpectedly. For more information, pass `verbose: true` in the second argument to fetch()
  path: "http://localhost:8000/classify-intent",
 errno: 0,
  code: "ECONNRESET"


(fail) API Endpoint : POST /mcp/tools/process-query > should handle multi-days events add query ("add" intent with refinement) [30000.06ms]
  ^ this test timed out after 30000ms.
[{"text":"at 10 AM to 11 AM","start":"2025-10-10T17:00:00.000Z","end":"2025-10-10T18:00:00.000Z"},{"text":"at 12 PM to 1 PM","start":"2025-10-10T19:00:00.000Z","end":"2025-10-10T20:00:00.000Z"}]
User Input:  Schedule meeting at 10 AM to 11 AM and lunch at 12 PM to 1 PM tomorrow
classifyIntent is called
events is parsed with regex:  [
  {
    summary: "Schedule meeting",
    date: "2025-10-10",
    startTime: "10:00",
    endTime: "11:00",
    duration_minutes: 60,
    timezone: "America/Los_Angeles",
    location: "10 AM to 11 AM and lunch at 12 PM to 1 PM tomorrow",
    displayTime: "10:00 am",
  }, {
    summary: "Schedule meeting",
    date: "2025-10-10",
    startTime: "12:00",
    endTime: "13:00",
    duration_minutes: 60,
    timezone: "America/Los_Angeles",
    location: "10 AM to 11 AM and lunch at 12 PM to 1 PM tomorrow",
    displayTime: "12:00 pm",
  }
]
Regex partial imperfect-refining with LLM
Ready to send Payload:  {
  partial: [
    {
      summary: "Schedule meeting",
      date: "2025-10-10",
      startTime: "10:00",
      endTime: "11:00",
      duration_minutes: 60,
      timezone: "America/Los_Angeles",
      location: "10 AM to 11 AM and lunch at 12 PM to 1 PM tomorrow",
      displayTime: "10:00 am",
    }, {
      summary: "Schedule meeting",
      date: "2025-10-10",
      startTime: "12:00",
      endTime: "13:00",
      duration_minutes: 60,
      timezone: "America/Los_Angeles",
      location: "10 AM to 11 AM and lunch at 12 PM to 1 PM tomorrow",
      displayTime: "12:00 pm",
    }
  ],
  input: "Schedule meeting at 10 AM to 11 AM and lunch at 12 PM to 1 PM tomorrow",
  timezone: "America/Los_Angeles",
  reference_date: "2025-10-15",
  parsed_results: [
    {
      text: "at 10 AM to 11 AM",
      start: "2025-10-10T17:00:00.000Z",
      end: "2025-10-10T18:00:00.000Z",
    }, {
      text: "at 12 PM to 1 PM",
      start: "2025-10-10T19:00:00.000Z",
      end: "2025-10-10T20:00:00.000Z",
    }
  ],
}
Error in classifyIntent LLM fallback: error: The socket connection was closed unexpectedly. For more information, pass `verbose: true` in the second argument to fetch()
  path: "http://localhost:8000/classify-intent",
 errno: 0,
  code: "ECONNRESET"


Detailed LLM setup error: error: The socket connection was closed unexpectedly. For more information, pass `verbose: true` in the second argument to fetch()
  path: "http://localhost:8000/refine-with-llm",
 errno: 0,
  code: "ECONNRESET"


Parsing Completed
Time Completed Parsing:  65564.192904

# Unhandled error between tests
-------------------------------
4 | import { describe, expect, test, jest } from "bun:test";
5 | import { fileURLToPath } from "url";
6 | 
7 | function parseNdjsonResponse(res: any): any[] {
8 |   const chunks: any[] = [];
9 |   const lines = res.text.split("\n").filter((line) => line.trim());
                             ^
TypeError: res.text.split is not a function. (In 'res.text.split(`
`)', 'res.text.split' is undefined)
      at parseNdjsonResponse (/home/kyle/Deployments/mcp-server-taskler/src/tests/api/schedules-bun.test.ts:9:26)
      at <anonymous> (/home/kyle/Deployments/mcp-server-taskler/src/tests/api/schedules-bun.test.ts:107:20)
-------------------------------

Detailed LLM setup error: error: The socket connection was closed unexpectedly. For more information, pass `verbose: true` in the second argument to fetch()
  path: "http://localhost:8000/refine-with-llm",
 errno: 0,
  code: "ECONNRESET"


Parsing Completed
Time Completed Parsing:  35793.588844
Fetch error in [generateNaturalResponse] :  error: The socket connection was closed unexpectedly. For more information, pass `verbose: true` in the second argument to fetch()
  path: "http://localhost:8000/generate-natural-response",
 errno: 0,
  code: "ECONNRESET"


naturalResponse/other :  I could not process your request. Please Provide more details
Detailed LLM setup error: error: The socket connection was closed unexpectedly. For more information, pass `verbose: true` in the second argument to fetch()
  path: "http://localhost:8000/refine-with-llm",
 errno: 0,
  code: "ECONNRESET"


Parsing Completed
Time Completed Parsing:  5797.421541
Fetch error in [generateNaturalResponse] :  error: The socket connection was closed unexpectedly. For more information, pass `verbose: true` in the second argument to fetch()
  path: "http://localhost:8000/generate-natural-response",
 errno: 0,
  code: "ECONNRESET"


naturalResponse/other :  I could not process your request. Please Provide more details
Fetch error in [generateNaturalResponse] :  error: The socket connection was closed unexpectedly. For more information, pass `verbose: true` in the second argument to fetch()
  path: "http://localhost:8000/generate-natural-response",
 errno: 0,
  code: "ECONNRESET"


Natural Response generated with intent add in 231.267724 
Fetch error in [generateNaturalResponse] :  error: Unable to connect. Is the computer able to access the url?
  path: "http://localhost:8000/generate-natural-response",
 errno: 0,
  code: "ConnectionRefused"


Natural Response generated with intent add in 4.017588 

# Unhandled error between tests
-------------------------------
4 | import { describe, expect, test, jest } from "bun:test";
5 | import { fileURLToPath } from "url";
6 | 
7 | function parseNdjsonResponse(res: any): any[] {
8 |   const chunks: any[] = [];
9 |   const lines = res.text.split("\n").filter((line) => line.trim());
                             ^
TypeError: res.text.split is not a function. (In 'res.text.split(`
`)', 'res.text.split' is undefined)
      at parseNdjsonResponse (/home/kyle/Deployments/mcp-server-taskler/src/tests/api/schedules-bun.test.ts:9:26)
      at <anonymous> (/home/kyle/Deployments/mcp-server-taskler/src/tests/api/schedules-bun.test.ts:49:20)
-------------------------------

4 | import { describe, expect, test, jest } from "bun:test";
5 | import { fileURLToPath } from "url";
6 | 
7 | function parseNdjsonResponse(res: any): any[] {
8 |   const chunks: any[] = [];
9 |   const lines = res.text.split("\n").filter((line) => line.trim());
                             ^
TypeError: res.text.split is not a function. (In 'res.text.split(`
`)', 'res.text.split' is undefined)
      at parseNdjsonResponse (/home/kyle/Deployments/mcp-server-taskler/src/tests/api/schedules-bun.test.ts:9:26)
      at <anonymous> (/home/kyle/Deployments/mcp-server-taskler/src/tests/api/schedules-bun.test.ts:169:20)
Fetch error in [generateNaturalResponse] :  error: Unable to connect. Is the computer able to access the url?
  path: "http://localhost:8000/generate-natural-response",
 errno: 0,
  code: "ConnectionRefused"


Natural Response generated with intent add in 1.746022 

# Unhandled error between tests
-------------------------------
4 | import { describe, expect, test, jest } from "bun:test";
5 | import { fileURLToPath } from "url";
6 | 
7 | function parseNdjsonResponse(res: any): any[] {
8 |   const chunks: any[] = [];
9 |   const lines = res.text.split("\n").filter((line) => line.trim());
                             ^
TypeError: res.text.split is not a function. (In 'res.text.split(`
`)', 'res.text.split' is undefined)
      at parseNdjsonResponse (/home/kyle/Deployments/mcp-server-taskler/src/tests/api/schedules-bun.test.ts:9:26)
      at <anonymous> (/home/kyle/Deployments/mcp-server-taskler/src/tests/api/schedules-bun.test.ts:78:20)
-------------------------------

(fail) API Endpoint : POST /mcp/tools/process-query > should handle multi-events in one day add query ("add" intent) [5802.40ms]

# Unhandled error between tests
-------------------------------
4 | import { describe, expect, test, jest } from "bun:test";
5 | import { fileURLToPath } from "url";
6 | 
7 | function parseNdjsonResponse(res: any): any[] {
8 |   const chunks: any[] = [];
9 |   const lines = res.text.split("\n").filter((line) => line.trim());
                             ^
TypeError: res.text.split is not a function. (In 'res.text.split(`
`)', 'res.text.split' is undefined)
      at parseNdjsonResponse (/home/kyle/Deployments/mcp-server-taskler/src/tests/api/schedules-bun.test.ts:9:26)
      at <anonymous> (/home/kyle/Deployments/mcp-server-taskler/src/tests/api/schedules-bun.test.ts:137:20)
-------------------------------


 0 pass
 5 fail
 4 errors
Ran 5 tests across 1 file. [126.10s]
