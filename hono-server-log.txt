Script started on 2025-10-14 22:12:56-07:00 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="84" LINES="54"]
[1m[7m%[27m[1m[0m                                                                                    ]2;kyle@kyle:~/Deployments/mcp-server-taskler]1;..erver-taskler[0m[27m[24m[J[01;32m➜  [36mmcp-server-taskler[00m [K[?1h=[?2004h[0m[27m[24m[J[01;32m➜  [36mmcp-server-taskler[00m [01;34mgit:([31mframework-change[34m) [33m✗[00m [Kbbu[1m[31mb[1m[31mu[0m[39m[90mn test src/tests/api/schedules-bun.[90mt[90mest.ts[39m[K[A[42C[1B
[0;1;2mcommand[0m
[J[0mbuildhash  [Jbuiltin  [Jbun  [Jbunx  [Jbunzip2  [Jbusctl  [Jbusybox  [Jbutteraugli_main  [J[3A[0m[27m[24m[47C[1m[31mbu[0m[39m[90mn test src/tests/api/schedules-bun.[90mt[90mest.ts[39m[K[A[42C[1m[31mb[1m[31mu[1m[31mn[0m[39m[0m[32mb[0m[32mu[0m[32mn[39m[1B
[J[0;1;2mcommand[0m
[J[0mbun      [Jbunx     [Jbunzip2[J[3A[0m[27m[24m[47C[32mbun[39m[90m test src/tests/api/schedules-bun.[90mt[90mest.ts[39m[K[A[43C[32mn[32m [39m[1B
[J[A[A[51C[32mn[39m[39m [32m[39m[32m[39m[32m[39m[32m[39m[32m[39m[32m[39m[32m[39m[32m[39m[32m[39m[32m[39m[32m[39m[32m[39m[30m[104m[39m[49m[32m[39m[32m[39m[30m[104m[39m[49m[32m[39m[32m[39m[30m[104m[39m[49m[1B
[J[32m-- scripts --[39m
[0mdev        start      typecheck
[32m-- command --[39m
[0madd       -- Add a dependency to package.json (bun a)
create    -- Create a new project from a template (bun c)
init      -- Start an empty Bun project from a blank template
install   -- Install dependencies for a package.json (bun i)
link      -- Link an npm package globally
outdated  -- Display the latest versions of outdated dependencies
remove    -- Remove a dependency from package.json (bun rm)
repl      -- Start a REPL session with Bun
run       -- Run JavaScript with Bun, a package.json script, or a bin
test      -- Run unit tests with Bun
unlink    -- Globally unlink an npm package
update    -- Update outdated dependencies & save to package.json
x         -- Install and execute a package bin (bunx)
[J[30m[104m(MORE)[39m[49m[18A[0m[27m[24m[47C[32mbun[39m [90mtest src/tests/api/schedules-bun.[90mt[90mest.ts[39m[K[A[44C[39mt[4mt[24m[32m[39m[32m[39m[32m[39m[32m[39m[32m[39m[32m[39m[32m[39m[32m[39m[32m[39m[32m[39m[32m[39m[32m[39m[32m[39m[32m[39m[32m[39m[32m[39m[1B
[J[32m-- scripts --[39m
[0mtypecheck
[32m-- command --[39m
[J[0mtest  -- Run unit tests with Bun[J[5A[0m[27m[24m[47C[32mbun[39m [4mt[24m[90mest src/tests/api/schedules-bun.[90mt[90mest.ts[39m[K[A[45C[4mt[39m[4me[24m[24mt[24me[32m[39m[32m[39m[32m[39m[32m[39m[1B
[J[32m-- command --[39m
[J[0mtest  -- Run unit tests with Bun[J[3A[0m[27m[24m[47C[32mbun[39m te[90mst src/tests/api/schedules-bun.[90mt[90mest.ts[39m[K[A[46C[39ms[39mt[32m[39m[32m[39m[32m[39m[32m[39m[1B
[J[32m-- command --[39m
[J[0mtest  -- Run unit tests with Bun[J[3A[0m[27m[24m[47C[32mbun[39m test[90m src/tests/api/schedules-bun.[90mt[90mest.ts[39m[K[A[48C[39m [39ms[39mr[39mc[39m/[39mt[39me[39ms[39mt[39ms[39m/[39ma[39mp[39mi[39m/[39ms[39mc[39mh[39me[39md[39mu[39ml[39me[39ms[39m-[39mb[39mu[39mn[39m.t[39me[39ms[39mt[39m.[39mt[39ms[A[49C[4ms[4mr[4mc[4m/[4mt[4me[4ms[4mt[4ms[4m/[4ma[4mp[4mi[4m/[4ms[4mc[4mh[4me[4md[4mu[4ml[4me[4ms[4m-[4mb[4mu[4mn[4m.[4mt[4me[4ms[4mt[4m.[4mt[4ms[24m
[J[0;1;2mfile[0m
[J[0mschedules-bun.test.ts[J[3A[0m[27m[24m[47C[32mbun[39m test [4msrc/tests/api/schedules-bun.[4mt[4mest.ts[24m[K[?1l>[?2004l
[J[A[7C
[J]2;bun test src/tests/api/schedules-bun.test.ts]1;bun[0m[1mbun test [0m[2mv1.3.0 (b0a6feca)[0m
[0m
src/tests/api/schedules-bun.test.ts:
[dotenv@17.2.3] injecting env (0) from .env [2m-- tip: 🛠️  run anywhere with `dotenvx run -- yourcommand`[0m
Loaded MODEL_PARSE: /home/kyle/.models/mistral-7b-instruct-v0.1.Q4_K_M.gguf
[]
User Input:  How are you doing?
classifyIntent is called
Intent returned :  other
response from LLM SERVER :  {
  [0mnatural_response[2m:[0m [0m[32m[0m[32m"I'm here to help with your schedule! What task can I assist with today?"[0m[0m[0m[2m,[0m
}
Generated response:  I'm here to help with your schedule! What task can I assist with today?
naturalResponse/other :  I'm here to help with your schedule! What task can I assist with today?
[0m[1m4 |[0m [0m[35mimport[0m { describe, expect, test, jest } [0m[35mfrom[0m [0m[32m"bun:test"[0m[0m[2m;[0m
[0m[1m5 |[0m [0m[35mimport[0m { fileURLToPath } [0m[35mfrom[0m [0m[32m"url"[0m[0m[2m;[0m
[0m[1m6 |[0m 
[0m[1m7 |[0m [0m[35mfunction[0m parseNdjsonResponse(res: [0m[34many[0m): [0m[34many[0m[] {
[0m[1m8 |[0m   [0m[35mconst[0m chunks: [0m[34many[0m[] = [][0m[2m;[0m
[0m[1m9 |[0m   [0m[35mconst[0m lines = res.text[0m[3m[1m.split[0m([0m[32m"\n"[0m)[0m[3m[1m.filter[0m((line) => line[0m[3m[1m.trim[0m())[0m[2m;[0m
                             [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mres.text.split is not a function. (In 'res.text.split(`
`)', 'res.text.split' is undefined)[0m
[0m      [2mat [0m[0m[1m[3mparseNdjsonResponse[0m[2m ([0m[0m[36m[2m/home/kyle/Deployments/mcp-server-taskler/[0m[36msrc/tests/api/schedules-bun.test.ts[0m[2m:[0m[33m9[0m[2m:[33m26[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m[2m/home/kyle/Deployments/mcp-server-taskler/[0m[36msrc/tests/api/schedules-bun.test.ts[0m[2m:[0m[33m49[0m[2m:[33m20[0m[2m)[0m
[0m[31m✗[0m [0mAPI Endpoint : POST /mcp/tools/process-query[2m >[0m[1m should handle chit-chat query ("other" intent)[0m [0m[2m[[1m1194.91ms[0m[2m][0m
[]
User Input:  What is 2 + 3 * 4?
classifyIntent is called
Intent returned :  other
response from LLM SERVER :  {
  [0mnatural_response[2m:[0m [0m[32m[0m[32m"Result: t. How does this relate to your schedule ? "[0m[0m[0m[2m,[0m
}
Generated response:  Result: t. How does this relate to your schedule ? 
naturalResponse/other :  Result: t. How does this relate to your schedule ? 
[0m[1m4 |[0m [0m[35mimport[0m { describe, expect, test, jest } [0m[35mfrom[0m [0m[32m"bun:test"[0m[0m[2m;[0m
[0m[1m5 |[0m [0m[35mimport[0m { fileURLToPath } [0m[35mfrom[0m [0m[32m"url"[0m[0m[2m;[0m
[0m[1m6 |[0m 
[0m[1m7 |[0m [0m[35mfunction[0m parseNdjsonResponse(res: [0m[34many[0m): [0m[34many[0m[] {
[0m[1m8 |[0m   [0m[35mconst[0m chunks: [0m[34many[0m[] = [][0m[2m;[0m
[0m[1m9 |[0m   [0m[35mconst[0m lines = res.text[0m[3m[1m.split[0m([0m[32m"\n"[0m)[0m[3m[1m.filter[0m((line) => line[0m[3m[1m.trim[0m())[0m[2m;[0m
                             [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mres.text.split is not a function. (In 'res.text.split(`
`)', 'res.text.split' is undefined)[0m
[0m      [2mat [0m[0m[1m[3mparseNdjsonResponse[0m[2m ([0m[0m[36m[2m/home/kyle/Deployments/mcp-server-taskler/[0m[36msrc/tests/api/schedules-bun.test.ts[0m[2m:[0m[33m9[0m[2m:[33m26[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m[2m/home/kyle/Deployments/mcp-server-taskler/[0m[36msrc/tests/api/schedules-bun.test.ts[0m[2m:[0m[33m78[0m[2m:[33m20[0m[2m)[0m
[0m[31m✗[0m [0mAPI Endpoint : POST /mcp/tools/process-query[2m >[0m[1m should handle computational-math query ("other" intent)[0m [0m[2m[[1m185.07ms[0m[2m][0m
[{"text":"tomorrow at 10 AM","start":"2025-10-10T17:00:00.000Z","end":null}]
User Input:  Schedule a meeting tomorrow at 10 AM in PDT
classifyIntent is called
events is parsed with regex:  [
  {
    [0msummary[2m:[0m [0m[32m[0m[32m"Event"[0m[0m[0m[2m,[0m
    [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-10"[0m[0m[0m[2m,[0m
    [0mstartTime[2m:[0m [0m[32m[0m[32m"10:00"[0m[0m[0m[2m,[0m
    [0mendTime[2m:[0m [0m[2mundefined[0m[0m[2m,[0m
    [0mduration_minutes[2m:[0m [0m[33m60[0m[0m[2m,[0m
    [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
    [0mlocation[2m:[0m [0m[32m[0m[32m"10 AM in PDT"[0m[0m[0m[2m,[0m
    [0mdisplayTime[2m:[0m [0m[32m[0m[32m"10:00 am"[0m[0m[0m[2m,[0m
  }
]
Regex partial imperfect-refining with LLM
Ready to send Payload:  {
  [0mpartial[2m:[0m {
    [0mevents[2m:[0m [
      [0m[36m[Object ...][0m
    ][0m[2m,[0m
    [0mconfirm[2m:[0m [0m[32m[0m[32m"Missing end time. Confirm default 60 minutes?"[0m[0m[0m[2m,[0m
  }[0m[2m,[0m
  [0minput[2m:[0m [0m[32m[0m[32m"Schedule a meeting tomorrow at 10 AM in PDT"[0m[0m[0m[2m,[0m
  [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
  [0mreference_date[2m:[0m [0m[32m[0m[32m"2025-10-15"[0m[0m[0m[2m,[0m
  [0mparsed_results[2m:[0m [
    {
      [0mtext[2m:[0m [0m[32m[0m[32m"tomorrow at 10 AM"[0m[0m[0m[2m,[0m
      [0mstart[2m:[0m [0m[32m[0m[32m"2025-10-10T17:00:00.000Z"[0m[0m[0m[2m,[0m
      [0mend[2m:[0m [0m[33mnull[0m[0m[2m,[0m
    }
  ][0m[2m,[0m
}
Refined from server:  {
  [0mevents[2m:[0m [][0m[2m,[0m
  [0mconfirm[2m:[0m [0m[32m[0m[32m"Meeting scheduled."[0m[0m[0m[2m,[0m
  [0misComplete[2m:[0m [0m[33mtrue[0m[0m[2m,[0m
  [0mfixes[2m:[0m [0m[32m""[0m[0m[2m,[0m
}
Parsing Completed
Time Completed Parsing:  [0m[33m2194.78745[0m
[0m[1m4 |[0m [0m[35mimport[0m { describe, expect, test, jest } [0m[35mfrom[0m [0m[32m"bun:test"[0m[0m[2m;[0m
[0m[1m5 |[0m [0m[35mimport[0m { fileURLToPath } [0m[35mfrom[0m [0m[32m"url"[0m[0m[2m;[0m
[0m[1m6 |[0m 
[0m[1m7 |[0m [0m[35mfunction[0m parseNdjsonResponse(res: [0m[34many[0m): [0m[34many[0m[] {
[0m[1m8 |[0m   [0m[35mconst[0m chunks: [0m[34many[0m[] = [][0m[2m;[0m
[0m[1m9 |[0m   [0m[35mconst[0m lines = res.text[0m[3m[1m.split[0m([0m[32m"\n"[0m)[0m[3m[1m.filter[0m((line) => line[0m[3m[1m.trim[0m())[0m[2m;[0m
                             [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mres.text.split is not a function. (In 'res.text.split(`
`)', 'res.text.split' is undefined)[0m
[0m      [2mat [0m[0m[1m[3mparseNdjsonResponse[0m[2m ([0m[0m[36m[2m/home/kyle/Deployments/mcp-server-taskler/[0m[36msrc/tests/api/schedules-bun.test.ts[0m[2m:[0m[33m9[0m[2m:[33m26[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m[2m/home/kyle/Deployments/mcp-server-taskler/[0m[36msrc/tests/api/schedules-bun.test.ts[0m[2m:[0m[33m107[0m[2m:[33m20[0m[2m)[0m
[0m[31m✗[0m [0mAPI Endpoint : POST /mcp/tools/process-query[2m >[0m[1m should handle single event add query ("add" intent)[0m [0m[2m[[1m2199.02ms[0m[2m][0m
response from LLM SERVER :  {
  [0mnatural_response[2m:[0m [0m[33mnull[0m[0m[2m,[0m
}
Generated response:  There is something wrong with naturalResponse.
Natural Response generated with intent add in 2.677498 
[{"text":"October 1, 2025 from 10am to 11am","start":"2025-10-01T17:00:00.000Z","end":"2025-10-01T18:00:00.000Z"},{"text":"October 2, 2025 from 12pm to 1pm","start":"2025-10-02T19:00:00.000Z","end":"2025-10-02T20:00:00.000Z"},{"text":"October 3, 2025 from 2pm to 3pm","start":"2025-10-03T21:00:00.000Z","end":"2025-10-03T22:00:00.000Z"},{"text":"October 4, 2025 from 6am to 7am","start":"2025-10-04T13:00:00.000Z","end":"2025-10-04T14:00:00.000Z"},{"text":"October 5, 2025 from 8pm to 10pm","start":"2025-10-06T03:00:00.000Z","end":"2025-10-06T05:00:00.000Z"},{"text":"October 6, 2025 from 9am to 12pm","start":"2025-10-06T16:00:00.000Z","end":"2025-10-06T19:00:00.000Z"},{"text":"October 7, 2025 from 7pm to 8pm","start":"2025-10-08T02:00:00.000Z","end":"2025-10-08T03:00:00.000Z"}]
User Input:  Add events: Meeting on October 1, 2025 from 10am to 11am at office; Lunch on October 2, 2025 from 12pm to 1pm at cafe; Call on October 3, 2025 from 2pm to 3pm; Workout on October 4, 2025 from 6am to 7am at gym; Movie on October 5, 2025 from 8pm to 10pm at theater; Hiking on October 6, 2025 from 9am to 12pm at park; Dinner on October 7, 2025 from 7pm to 8pm at home
classifyIntent is called
events is parsed with regex:  [
  {
    [0msummary[2m:[0m [0m[32m[0m[32m"events: Meeting on October 1, 2025"[0m[0m[0m[2m,[0m
    [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-01"[0m[0m[0m[2m,[0m
    [0mstartTime[2m:[0m [0m[32m[0m[32m"10:00"[0m[0m[0m[2m,[0m
    [0mendTime[2m:[0m [0m[32m[0m[32m"11:00"[0m[0m[0m[2m,[0m
    [0mduration_minutes[2m:[0m [0m[33m60[0m[0m[2m,[0m
    [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
    [0mlocation[2m:[0m [0m[32m[0m[32m"office"[0m[0m[0m[2m,[0m
    [0mdisplayTime[2m:[0m [0m[32m[0m[32m"10:00 am"[0m[0m[0m[2m,[0m
  }[0m[2m,[0m {
    [0msummary[2m:[0m [0m[32m[0m[32m"Lunch on October 2, 2025"[0m[0m[0m[2m,[0m
    [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-02"[0m[0m[0m[2m,[0m
    [0mstartTime[2m:[0m [0m[32m[0m[32m"12:00"[0m[0m[0m[2m,[0m
    [0mendTime[2m:[0m [0m[32m[0m[32m"13:00"[0m[0m[0m[2m,[0m
    [0mduration_minutes[2m:[0m [0m[33m60[0m[0m[2m,[0m
    [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
    [0mlocation[2m:[0m [0m[32m[0m[32m"cafe"[0m[0m[0m[2m,[0m
    [0mdisplayTime[2m:[0m [0m[32m[0m[32m"12:00 pm"[0m[0m[0m[2m,[0m
  }[0m[2m,[0m {
    [0msummary[2m:[0m [0m[32m[0m[32m"Call on October 3, 2025"[0m[0m[0m[2m,[0m
    [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-03"[0m[0m[0m[2m,[0m
    [0mstartTime[2m:[0m [0m[32m[0m[32m"14:00"[0m[0m[0m[2m,[0m
    [0mendTime[2m:[0m [0m[32m[0m[32m"15:00"[0m[0m[0m[2m,[0m
    [0mduration_minutes[2m:[0m [0m[33m60[0m[0m[2m,[0m
    [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
    [0mlocation[2m:[0m [0m[33mnull[0m[0m[2m,[0m
    [0mdisplayTime[2m:[0m [0m[32m[0m[32m"14:00 pm"[0m[0m[0m[2m,[0m
  }[0m[2m,[0m {
    [0msummary[2m:[0m [0m[32m[0m[32m"Workout on October 4, 2025"[0m[0m[0m[2m,[0m
    [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-04"[0m[0m[0m[2m,[0m
    [0mstartTime[2m:[0m [0m[32m[0m[32m"06:00"[0m[0m[0m[2m,[0m
    [0mendTime[2m:[0m [0m[32m[0m[32m"07:00"[0m[0m[0m[2m,[0m
    [0mduration_minutes[2m:[0m [0m[33m60[0m[0m[2m,[0m
    [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
    [0mlocation[2m:[0m [0m[32m[0m[32m"gym"[0m[0m[0m[2m,[0m
    [0mdisplayTime[2m:[0m [0m[32m[0m[32m"06:00 am"[0m[0m[0m[2m,[0m
  }[0m[2m,[0m {
    [0msummary[2m:[0m [0m[32m[0m[32m"Movie on October 5, 2025"[0m[0m[0m[2m,[0m
    [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-05"[0m[0m[0m[2m,[0m
    [0mstartTime[2m:[0m [0m[32m[0m[32m"20:00"[0m[0m[0m[2m,[0m
    [0mendTime[2m:[0m [0m[32m[0m[32m"22:00"[0m[0m[0m[2m,[0m
    [0mduration_minutes[2m:[0m [0m[33m120[0m[0m[2m,[0m
    [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
    [0mlocation[2m:[0m [0m[32m[0m[32m"theater"[0m[0m[0m[2m,[0m
    [0mdisplayTime[2m:[0m [0m[32m[0m[32m"20:00 pm"[0m[0m[0m[2m,[0m
  }[0m[2m,[0m {
    [0msummary[2m:[0m [0m[32m[0m[32m"Hiking on October 6, 2025"[0m[0m[0m[2m,[0m
    [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-06"[0m[0m[0m[2m,[0m
    [0mstartTime[2m:[0m [0m[32m[0m[32m"09:00"[0m[0m[0m[2m,[0m
    [0mendTime[2m:[0m [0m[32m[0m[32m"12:00"[0m[0m[0m[2m,[0m
    [0mduration_minutes[2m:[0m [0m[33m180[0m[0m[2m,[0m
    [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
    [0mlocation[2m:[0m [0m[32m[0m[32m"park"[0m[0m[0m[2m,[0m
    [0mdisplayTime[2m:[0m [0m[32m[0m[32m"09:00 am"[0m[0m[0m[2m,[0m
  }[0m[2m,[0m {
    [0msummary[2m:[0m [0m[32m[0m[32m"Dinner on October 7, 2025"[0m[0m[0m[2m,[0m
    [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-07"[0m[0m[0m[2m,[0m
    [0mstartTime[2m:[0m [0m[32m[0m[32m"19:00"[0m[0m[0m[2m,[0m
    [0mendTime[2m:[0m [0m[32m[0m[32m"20:00"[0m[0m[0m[2m,[0m
    [0mduration_minutes[2m:[0m [0m[33m60[0m[0m[2m,[0m
    [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
    [0mlocation[2m:[0m [0m[32m[0m[32m"home"[0m[0m[0m[2m,[0m
    [0mdisplayTime[2m:[0m [0m[32m[0m[32m"19:00 pm"[0m[0m[0m[2m,[0m
  }
]
Regex partial imperfect-refining with LLM
Ready to send Payload:  {
  [0mpartial[2m:[0m [
    {
      [0msummary[2m:[0m [0m[32m[0m[32m"events: Meeting on October 1, 2025"[0m[0m[0m[2m,[0m
      [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-01"[0m[0m[0m[2m,[0m
      [0mstartTime[2m:[0m [0m[32m[0m[32m"10:00"[0m[0m[0m[2m,[0m
      [0mendTime[2m:[0m [0m[32m[0m[32m"11:00"[0m[0m[0m[2m,[0m
      [0mduration_minutes[2m:[0m [0m[33m60[0m[0m[2m,[0m
      [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
      [0mlocation[2m:[0m [0m[32m[0m[32m"office"[0m[0m[0m[2m,[0m
      [0mdisplayTime[2m:[0m [0m[32m[0m[32m"10:00 am"[0m[0m[0m[2m,[0m
    }[0m[2m,[0m {
      [0msummary[2m:[0m [0m[32m[0m[32m"Lunch on October 2, 2025"[0m[0m[0m[2m,[0m
      [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-02"[0m[0m[0m[2m,[0m
      [0mstartTime[2m:[0m [0m[32m[0m[32m"12:00"[0m[0m[0m[2m,[0m
      [0mendTime[2m:[0m [0m[32m[0m[32m"13:00"[0m[0m[0m[2m,[0m
      [0mduration_minutes[2m:[0m [0m[33m60[0m[0m[2m,[0m
      [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
      [0mlocation[2m:[0m [0m[32m[0m[32m"cafe"[0m[0m[0m[2m,[0m
      [0mdisplayTime[2m:[0m [0m[32m[0m[32m"12:00 pm"[0m[0m[0m[2m,[0m
    }[0m[2m,[0m {
      [0msummary[2m:[0m [0m[32m[0m[32m"Call on October 3, 2025"[0m[0m[0m[2m,[0m
      [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-03"[0m[0m[0m[2m,[0m
      [0mstartTime[2m:[0m [0m[32m[0m[32m"14:00"[0m[0m[0m[2m,[0m
      [0mendTime[2m:[0m [0m[32m[0m[32m"15:00"[0m[0m[0m[2m,[0m
      [0mduration_minutes[2m:[0m [0m[33m60[0m[0m[2m,[0m
      [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
      [0mlocation[2m:[0m [0m[33mnull[0m[0m[2m,[0m
      [0mdisplayTime[2m:[0m [0m[32m[0m[32m"14:00 pm"[0m[0m[0m[2m,[0m
    }[0m[2m,[0m {
      [0msummary[2m:[0m [0m[32m[0m[32m"Workout on October 4, 2025"[0m[0m[0m[2m,[0m
      [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-04"[0m[0m[0m[2m,[0m
      [0mstartTime[2m:[0m [0m[32m[0m[32m"06:00"[0m[0m[0m[2m,[0m
      [0mendTime[2m:[0m [0m[32m[0m[32m"07:00"[0m[0m[0m[2m,[0m
      [0mduration_minutes[2m:[0m [0m[33m60[0m[0m[2m,[0m
      [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
      [0mlocation[2m:[0m [0m[32m[0m[32m"gym"[0m[0m[0m[2m,[0m
      [0mdisplayTime[2m:[0m [0m[32m[0m[32m"06:00 am"[0m[0m[0m[2m,[0m
    }[0m[2m,[0m {
      [0msummary[2m:[0m [0m[32m[0m[32m"Movie on October 5, 2025"[0m[0m[0m[2m,[0m
      [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-05"[0m[0m[0m[2m,[0m
      [0mstartTime[2m:[0m [0m[32m[0m[32m"20:00"[0m[0m[0m[2m,[0m
      [0mendTime[2m:[0m [0m[32m[0m[32m"22:00"[0m[0m[0m[2m,[0m
      [0mduration_minutes[2m:[0m [0m[33m120[0m[0m[2m,[0m
      [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
      [0mlocation[2m:[0m [0m[32m[0m[32m"theater"[0m[0m[0m[2m,[0m
      [0mdisplayTime[2m:[0m [0m[32m[0m[32m"20:00 pm"[0m[0m[0m[2m,[0m
    }[0m[2m,[0m {
      [0msummary[2m:[0m [0m[32m[0m[32m"Hiking on October 6, 2025"[0m[0m[0m[2m,[0m
      [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-06"[0m[0m[0m[2m,[0m
      [0mstartTime[2m:[0m [0m[32m[0m[32m"09:00"[0m[0m[0m[2m,[0m
      [0mendTime[2m:[0m [0m[32m[0m[32m"12:00"[0m[0m[0m[2m,[0m
      [0mduration_minutes[2m:[0m [0m[33m180[0m[0m[2m,[0m
      [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
      [0mlocation[2m:[0m [0m[32m[0m[32m"park"[0m[0m[0m[2m,[0m
      [0mdisplayTime[2m:[0m [0m[32m[0m[32m"09:00 am"[0m[0m[0m[2m,[0m
    }[0m[2m,[0m {
      [0msummary[2m:[0m [0m[32m[0m[32m"Dinner on October 7, 2025"[0m[0m[0m[2m,[0m
      [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-07"[0m[0m[0m[2m,[0m
      [0mstartTime[2m:[0m [0m[32m[0m[32m"19:00"[0m[0m[0m[2m,[0m
      [0mendTime[2m:[0m [0m[32m[0m[32m"20:00"[0m[0m[0m[2m,[0m
      [0mduration_minutes[2m:[0m [0m[33m60[0m[0m[2m,[0m
      [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
      [0mlocation[2m:[0m [0m[32m[0m[32m"home"[0m[0m[0m[2m,[0m
      [0mdisplayTime[2m:[0m [0m[32m[0m[32m"19:00 pm"[0m[0m[0m[2m,[0m
    }
  ][0m[2m,[0m
  [0minput[2m:[0m [0m[32m[0m[32m"Add events: Meeting on October 1, 2025 from 10am to 11am at office; Lunch on October 2, 2025 from 12pm to 1pm at cafe; Call on October 3, 2025 from 2pm to 3pm; Workout on October 4, 2025 from 6am to 7am at gym; Movie on October 5, 2025 from 8pm to 10pm at theater; Hiking on October 6, 2025 from 9am to 12pm at park; Dinner on October 7, 2025 from 7pm to 8pm at home"[0m[0m[0m[2m,[0m
  [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
  [0mreference_date[2m:[0m [0m[32m[0m[32m"2025-10-15"[0m[0m[0m[2m,[0m
  [0mparsed_results[2m:[0m [
    {
      [0mtext[2m:[0m [0m[32m[0m[32m"October 1, 2025 from 10am to 11am"[0m[0m[0m[2m,[0m
      [0mstart[2m:[0m [0m[32m[0m[32m"2025-10-01T17:00:00.000Z"[0m[0m[0m[2m,[0m
      [0mend[2m:[0m [0m[32m[0m[32m"2025-10-01T18:00:00.000Z"[0m[0m[0m[2m,[0m
    }[0m[2m,[0m {
      [0mtext[2m:[0m [0m[32m[0m[32m"October 2, 2025 from 12pm to 1pm"[0m[0m[0m[2m,[0m
      [0mstart[2m:[0m [0m[32m[0m[32m"2025-10-02T19:00:00.000Z"[0m[0m[0m[2m,[0m
      [0mend[2m:[0m [0m[32m[0m[32m"2025-10-02T20:00:00.000Z"[0m[0m[0m[2m,[0m
    }[0m[2m,[0m {
      [0mtext[2m:[0m [0m[32m[0m[32m"October 3, 2025 from 2pm to 3pm"[0m[0m[0m[2m,[0m
      [0mstart[2m:[0m [0m[32m[0m[32m"2025-10-03T21:00:00.000Z"[0m[0m[0m[2m,[0m
      [0mend[2m:[0m [0m[32m[0m[32m"2025-10-03T22:00:00.000Z"[0m[0m[0m[2m,[0m
    }[0m[2m,[0m {
      [0mtext[2m:[0m [0m[32m[0m[32m"October 4, 2025 from 6am to 7am"[0m[0m[0m[2m,[0m
      [0mstart[2m:[0m [0m[32m[0m[32m"2025-10-04T13:00:00.000Z"[0m[0m[0m[2m,[0m
      [0mend[2m:[0m [0m[32m[0m[32m"2025-10-04T14:00:00.000Z"[0m[0m[0m[2m,[0m
    }[0m[2m,[0m {
      [0mtext[2m:[0m [0m[32m[0m[32m"October 5, 2025 from 8pm to 10pm"[0m[0m[0m[2m,[0m
      [0mstart[2m:[0m [0m[32m[0m[32m"2025-10-06T03:00:00.000Z"[0m[0m[0m[2m,[0m
      [0mend[2m:[0m [0m[32m[0m[32m"2025-10-06T05:00:00.000Z"[0m[0m[0m[2m,[0m
    }[0m[2m,[0m {
      [0mtext[2m:[0m [0m[32m[0m[32m"October 6, 2025 from 9am to 12pm"[0m[0m[0m[2m,[0m
      [0mstart[2m:[0m [0m[32m[0m[32m"2025-10-06T16:00:00.000Z"[0m[0m[0m[2m,[0m
      [0mend[2m:[0m [0m[32m[0m[32m"2025-10-06T19:00:00.000Z"[0m[0m[0m[2m,[0m
    }[0m[2m,[0m {
      [0mtext[2m:[0m [0m[32m[0m[32m"October 7, 2025 from 7pm to 8pm"[0m[0m[0m[2m,[0m
      [0mstart[2m:[0m [0m[32m[0m[32m"2025-10-08T02:00:00.000Z"[0m[0m[0m[2m,[0m
      [0mend[2m:[0m [0m[32m[0m[32m"2025-10-08T03:00:00.000Z"[0m[0m[0m[2m,[0m
    }
  ][0m[2m,[0m
}
Refined from server:  {
  [0mevents[2m:[0m [
    {
      [0msummary[2m:[0m [0m[32m[0m[32m"events: Meeting on October 1, 2025"[0m[0m[0m[2m,[0m
      [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-01"[0m[0m[0m[2m,[0m
      [0mstartTime[2m:[0m [0m[32m[0m[32m"10:00"[0m[0m[0m[2m,[0m
      [0mendTime[2m:[0m [0m[32m[0m[32m"11:00"[0m[0m[0m[2m,[0m
      [0mduration_minutes[2m:[0m [0m[33m60[0m[0m[2m,[0m
      [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
      [0mlocation[2m:[0m [0m[32m[0m[32m"office"[0m[0m[0m[2m,[0m
      [0mdisplayTime[2m:[0m [0m[32m[0m[32m"10:00 am"[0m[0m[0m[2m,[0m
    }[0m[2m,[0m {
      [0msummary[2m:[0m [0m[32m[0m[32m"Lunch on October 2, 2025"[0m[0m[0m[2m,[0m
      [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-02"[0m[0m[0m[2m,[0m
      [0mstartTime[2m:[0m [0m[32m[0m[32m"12:00"[0m[0m[0m[2m,[0m
      [0mendTime[2m:[0m [0m[32m[0m[32m"13:00"[0m[0m[0m[2m,[0m
      [0mduration_minutes[2m:[0m [0m[33m60[0m[0m[2m,[0m
      [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
      [0mlocation[2m:[0m [0m[32m[0m[32m"cafe"[0m[0m[0m[2m,[0m
      [0mdisplayTime[2m:[0m [0m[32m[0m[32m"12:00 pm"[0m[0m[0m[2m,[0m
    }[0m[2m,[0m {
      [0msummary[2m:[0m [0m[32m[0m[32m"Call on October 3, 2025"[0m[0m[0m[2m,[0m
      [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-03"[0m[0m[0m[2m,[0m
      [0mstartTime[2m:[0m [0m[32m[0m[32m"14:00"[0m[0m[0m[2m,[0m
      [0mendTime[2m:[0m [0m[32m[0m[32m"15:00"[0m[0m[0m[2m,[0m
      [0mduration_minutes[2m:[0m [0m[33m60[0m[0m[2m,[0m
      [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
      [0mlocation[2m:[0m [0m[33mnull[0m[0m[2m,[0m
      [0mdisplayTime[2m:[0m [0m[32m[0m[32m"14:00 pm"[0m[0m[0m[2m,[0m
    }[0m[2m,[0m {
      [0msummary[2m:[0m [0m[32m[0m[32m"Workout on October 4, 2025"[0m[0m[0m[2m,[0m
      [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-04"[0m[0m[0m[2m,[0m
      [0mstartTime[2m:[0m [0m[32m[0m[32m"06:00"[0m[0m[0m[2m,[0m
      [0mendTime[2m:[0m [0m[32m[0m[32m"07:00"[0m[0m[0m[2m,[0m
      [0mduration_minutes[2m:[0m [0m[33m60[0m[0m[2m,[0m
      [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
      [0mlocation[2m:[0m [0m[32m[0m[32m"gym"[0m[0m[0m[2m,[0m
      [0mdisplayTime[2m:[0m [0m[32m[0m[32m"06:00 am"[0m[0m[0m[2m,[0m
    }[0m[2m,[0m {
      [0msummary[2m:[0m [0m[32m[0m[32m"Movie on October 5, 2025"[0m[0m[0m[2m,[0m
      [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-05"[0m[0m[0m[2m,[0m
      [0mstartTime[2m:[0m [0m[32m[0m[32m"20:00"[0m[0m[0m[2m,[0m
      [0mendTime[2m:[0m [0m[32m[0m[32m"22:00"[0m[0m[0m[2m,[0m
      [0mduration_minutes[2m:[0m [0m[33m120[0m[0m[2m,[0m
      [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
      [0mlocation[2m:[0m [0m[32m[0m[32m"theater"[0m[0m[0m[2m,[0m
      [0mdisplayTime[2m:[0m [0m[32m[0m[32m"20:00 pm"[0m[0m[0m[2m,[0m
    }[0m[2m,[0m {
      [0msummary[2m:[0m [0m[32m[0m[32m"Hiking on October 6, 2025"[0m[0m[0m[2m,[0m
      [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-06"[0m[0m[0m[2m,[0m
      [0mstartTime[2m:[0m [0m[32m[0m[32m"09:00"[0m[0m[0m[2m,[0m
      [0mendTime[2m:[0m [0m[32m[0m[32m"12:00"[0m[0m[0m[2m,[0m
      [0mduration_minutes[2m:[0m [0m[33m180[0m[0m[2m,[0m
      [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
      [0mlocation[2m:[0m [0m[32m[0m[32m"park"[0m[0m[0m[2m,[0m
      [0mdisplayTime[2m:[0m [0m[32m[0m[32m"09:00 am"[0m[0m[0m[2m,[0m
    }[0m[2m,[0m {
      [0msummary[2m:[0m [0m[32m[0m[32m"Dinner on October 7, 2025"[0m[0m[0m[2m,[0m
      [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-07"[0m[0m[0m[2m,[0m
      [0mstartTime[2m:[0m [0m[32m[0m[32m"19:00"[0m[0m[0m[2m,[0m
      [0mendTime[2m:[0m [0m[32m[0m[32m"20:00"[0m[0m[0m[2m,[0m
      [0mduration_minutes[2m:[0m [0m[33m60[0m[0m[2m,[0m
      [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
      [0mlocation[2m:[0m [0m[32m[0m[32m"home"[0m[0m[0m[2m,[0m
      [0mdisplayTime[2m:[0m [0m[32m[0m[32m"19:00 pm"[0m[0m[0m[2m,[0m
    }
  ][0m[2m,[0m
  [0mconfirm[2m:[0m [0m[32m[0m[32m"Partial parse-confirm?"[0m[0m[0m[2m,[0m
}
Parsing Completed
Time Completed Parsing:  [0m[33m6.933919[0m
[0m[1m4 |[0m [0m[35mimport[0m { describe, expect, test, jest } [0m[35mfrom[0m [0m[32m"bun:test"[0m[0m[2m;[0m
[0m[1m5 |[0m [0m[35mimport[0m { fileURLToPath } [0m[35mfrom[0m [0m[32m"url"[0m[0m[2m;[0m
[0m[1m6 |[0m 
[0m[1m7 |[0m [0m[35mfunction[0m parseNdjsonResponse(res: [0m[34many[0m): [0m[34many[0m[] {
[0m[1m8 |[0m   [0m[35mconst[0m chunks: [0m[34many[0m[] = [][0m[2m;[0m
[0m[1m9 |[0m   [0m[35mconst[0m lines = res.text[0m[3m[1m.split[0m([0m[32m"\n"[0m)[0m[3m[1m.filter[0m((line) => line[0m[3m[1m.trim[0m())[0m[2m;[0m
                             [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mres.text.split is not a function. (In 'res.text.split(`
`)', 'res.text.split' is undefined)[0m
[0m      [2mat [0m[0m[1m[3mparseNdjsonResponse[0m[2m ([0m[0m[36m[2m/home/kyle/Deployments/mcp-server-taskler/[0m[36msrc/tests/api/schedules-bun.test.ts[0m[2m:[0m[33m9[0m[2m:[33m26[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m[2m/home/kyle/Deployments/mcp-server-taskler/[0m[36msrc/tests/api/schedules-bun.test.ts[0m[2m:[0m[33m137[0m[2m:[33m20[0m[2m)[0m
[0m[31m✗[0m [0mAPI Endpoint : POST /mcp/tools/process-query[2m >[0m[1m should handle multi-days events add query ("add" intent with refinement)[0m [0m[2m[[1m11.11ms[0m[2m][0m
[{"text":"at 10 AM to 11 AM","start":"2025-10-10T17:00:00.000Z","end":"2025-10-10T18:00:00.000Z"},{"text":"at 12 PM to 1 PM","start":"2025-10-10T19:00:00.000Z","end":"2025-10-10T20:00:00.000Z"}]
User Input:  Schedule meeting at 10 AM to 11 AM and lunch at 12 PM to 1 PM tomorrow
classifyIntent is called
events is parsed with regex:  [
  {
    [0msummary[2m:[0m [0m[32m[0m[32m"Schedule meeting"[0m[0m[0m[2m,[0m
    [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-10"[0m[0m[0m[2m,[0m
    [0mstartTime[2m:[0m [0m[32m[0m[32m"10:00"[0m[0m[0m[2m,[0m
    [0mendTime[2m:[0m [0m[32m[0m[32m"11:00"[0m[0m[0m[2m,[0m
    [0mduration_minutes[2m:[0m [0m[33m60[0m[0m[2m,[0m
    [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
    [0mlocation[2m:[0m [0m[32m[0m[32m"10 AM to 11 AM and lunch at 12 PM to 1 PM tomorrow"[0m[0m[0m[2m,[0m
    [0mdisplayTime[2m:[0m [0m[32m[0m[32m"10:00 am"[0m[0m[0m[2m,[0m
  }[0m[2m,[0m {
    [0msummary[2m:[0m [0m[32m[0m[32m"Schedule meeting"[0m[0m[0m[2m,[0m
    [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-10"[0m[0m[0m[2m,[0m
    [0mstartTime[2m:[0m [0m[32m[0m[32m"12:00"[0m[0m[0m[2m,[0m
    [0mendTime[2m:[0m [0m[32m[0m[32m"13:00"[0m[0m[0m[2m,[0m
    [0mduration_minutes[2m:[0m [0m[33m60[0m[0m[2m,[0m
    [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
    [0mlocation[2m:[0m [0m[32m[0m[32m"10 AM to 11 AM and lunch at 12 PM to 1 PM tomorrow"[0m[0m[0m[2m,[0m
    [0mdisplayTime[2m:[0m [0m[32m[0m[32m"12:00 pm"[0m[0m[0m[2m,[0m
  }
]
Regex partial imperfect-refining with LLM
Ready to send Payload:  {
  [0mpartial[2m:[0m [
    {
      [0msummary[2m:[0m [0m[32m[0m[32m"Schedule meeting"[0m[0m[0m[2m,[0m
      [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-10"[0m[0m[0m[2m,[0m
      [0mstartTime[2m:[0m [0m[32m[0m[32m"10:00"[0m[0m[0m[2m,[0m
      [0mendTime[2m:[0m [0m[32m[0m[32m"11:00"[0m[0m[0m[2m,[0m
      [0mduration_minutes[2m:[0m [0m[33m60[0m[0m[2m,[0m
      [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
      [0mlocation[2m:[0m [0m[32m[0m[32m"10 AM to 11 AM and lunch at 12 PM to 1 PM tomorrow"[0m[0m[0m[2m,[0m
      [0mdisplayTime[2m:[0m [0m[32m[0m[32m"10:00 am"[0m[0m[0m[2m,[0m
    }[0m[2m,[0m {
      [0msummary[2m:[0m [0m[32m[0m[32m"Schedule meeting"[0m[0m[0m[2m,[0m
      [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-10"[0m[0m[0m[2m,[0m
      [0mstartTime[2m:[0m [0m[32m[0m[32m"12:00"[0m[0m[0m[2m,[0m
      [0mendTime[2m:[0m [0m[32m[0m[32m"13:00"[0m[0m[0m[2m,[0m
      [0mduration_minutes[2m:[0m [0m[33m60[0m[0m[2m,[0m
      [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
      [0mlocation[2m:[0m [0m[32m[0m[32m"10 AM to 11 AM and lunch at 12 PM to 1 PM tomorrow"[0m[0m[0m[2m,[0m
      [0mdisplayTime[2m:[0m [0m[32m[0m[32m"12:00 pm"[0m[0m[0m[2m,[0m
    }
  ][0m[2m,[0m
  [0minput[2m:[0m [0m[32m[0m[32m"Schedule meeting at 10 AM to 11 AM and lunch at 12 PM to 1 PM tomorrow"[0m[0m[0m[2m,[0m
  [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
  [0mreference_date[2m:[0m [0m[32m[0m[32m"2025-10-15"[0m[0m[0m[2m,[0m
  [0mparsed_results[2m:[0m [
    {
      [0mtext[2m:[0m [0m[32m[0m[32m"at 10 AM to 11 AM"[0m[0m[0m[2m,[0m
      [0mstart[2m:[0m [0m[32m[0m[32m"2025-10-10T17:00:00.000Z"[0m[0m[0m[2m,[0m
      [0mend[2m:[0m [0m[32m[0m[32m"2025-10-10T18:00:00.000Z"[0m[0m[0m[2m,[0m
    }[0m[2m,[0m {
      [0mtext[2m:[0m [0m[32m[0m[32m"at 12 PM to 1 PM"[0m[0m[0m[2m,[0m
      [0mstart[2m:[0m [0m[32m[0m[32m"2025-10-10T19:00:00.000Z"[0m[0m[0m[2m,[0m
      [0mend[2m:[0m [0m[32m[0m[32m"2025-10-10T20:00:00.000Z"[0m[0m[0m[2m,[0m
    }
  ][0m[2m,[0m
}
[0m[33m[Bun.serve][0m[2m:[0m request timed out after 10 seconds. Pass [2m[36m`idleTimeout`[0m to configure.
response from LLM SERVER :  {
  [0mnatural_response[2m:[0m [0m[32m[0m[32m"Here are the confirmed events:\n\n1. Meeting\n   - Summary: \n     Date (YYYY-MM-DD): 2025-10-01  \n    Start Time HH:mm : 10:00   \n      End time if available, in same format as start and end times for each event.\n        Duration minutes:\n          America/Los_Angeles timezone based on date\n            - If October is the first month of year (i.e., January to September), then use PDT. \n              Otherwise PST will be used.\n\n2.Lunch\n\n   Summary: \n\n     Date YYYY-MM-DD : 2025-10-02  \n    Start Time HH:mm:\n      End time if available, in same format as start and end times for each event.\n        Duration minutes:\n\n          America/Los_Angeles timezone based on date\n            - If October is the first month of year (i.e., January to September), then use PDT. \n              Otherwise PST will be used.\n\n3.Call\n\n   Summary: \n\n     Date YYYY-MM-DD : 2025-10-03  \n    Start Time HH:mm:\n      End time if available, in same format as start and end times for each event.\n        Duration minutes:\n\n          America/Los_Angeles timezone based on date\n            - If October is the first month of year (i.e., January to September), then use PDT. \n              Otherwise PST will be used.\n\n4.Workout\n\n   Summary: \n\n     Date YYYY-MM-DD : 2025-10-04  \n    Start Time HH:mm:\n      End time if available, in same format as start and end times for each event.\n        Duration minutes:\n\n          America/Los_Angeles timezone based on date\n            - If October is the first month of year (i.e., January to September), then use PDT. \n              Otherwise PST will be used.\n\n5.Movie\n\n   Summary: \n\n     Date YYYY-MM-DD : 2025-10-05  \n    Start Time HH:mm:\n      End time if available, in same format as start and end times for each event.\n        Duration minutes:\n\n          America/Los_Angeles timezone based on date\n            - If October is the first month of year (i.e., January to September), then use PDT. \n              Otherwise PST will be used.\n\n6.Hiking\n\n   Summary: \n\n     Date YYYY-MM-DD : 2025-10-06  \n    Start Time HH:mm:\n      End time if available, in same format as start and end"[0m[0m[0m[2m,[0m
}
Generated response:  Here are the confirmed events:

1. Meeting
   - Summary: 
     Date (YYYY-MM-DD): 2025-10-01  
    Start Time HH:mm : 10:00   
      End time if available, in same format as start and end times for each event.
        Duration minutes:
          America/Los_Angeles timezone based on date
            - If October is the first month of year (i.e., January to September), then use PDT. 
              Otherwise PST will be used.

2.Lunch

   Summary: 

     Date YYYY-MM-DD : 2025-10-02  
    Start Time HH:mm:
      End time if available, in same format as start and end times for each event.
        Duration minutes:

          America/Los_Angeles timezone based on date
            - If October is the first month of year (i.e., January to September), then use PDT. 
              Otherwise PST will be used.

3.Call

   Summary: 

     Date YYYY-MM-DD : 2025-10-03  
    Start Time HH:mm:
      End time if available, in same format as start and end times for each event.
        Duration minutes:

          America/Los_Angeles timezone based on date
            - If October is the first month of year (i.e., January to September), then use PDT. 
              Otherwise PST will be used.

4.Workout

   Summary: 

     Date YYYY-MM-DD : 2025-10-04  
    Start Time HH:mm:
      End time if available, in same format as start and end times for each event.
        Duration minutes:

          America/Los_Angeles timezone based on date
            - If October is the first month of year (i.e., January to September), then use PDT. 
              Otherwise PST will be used.

5.Movie

   Summary: 

     Date YYYY-MM-DD : 2025-10-05  
    Start Time HH:mm:
      End time if available, in same format as start and end times for each event.
        Duration minutes:

          America/Los_Angeles timezone based on date
            - If October is the first month of year (i.e., January to September), then use PDT. 
              Otherwise PST will be used.

6.Hiking

   Summary: 

     Date YYYY-MM-DD : 2025-10-06  
    Start Time HH:mm:
      End time if available, in same format as start and end
Natural Response generated with intent add in 12095.056335 
Refined from server:  {
  [0mevents[2m:[0m [
    {
      [0msummary[2m:[0m [0m[32m[0m[32m"Schedule meeting"[0m[0m[0m[2m,[0m
      [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-10"[0m[0m[0m[2m,[0m
      [0mstartTime[2m:[0m [0m[32m[0m[32m"10:00"[0m[0m[0m[2m,[0m
      [0mendTime[2m:[0m [0m[32m[0m[32m"11:00"[0m[0m[0m[2m,[0m
      [0mduration_minutes[2m:[0m [0m[33m60[0m[0m[2m,[0m
      [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
      [0mlocation[2m:[0m [0m[32m[0m[32m"10 AM to 11 AM and lunch at 12 PM to 1 PM tomorrow"[0m[0m[0m[2m,[0m
      [0mdisplayTime[2m:[0m [0m[32m[0m[32m"10:00 am"[0m[0m[0m[2m,[0m
    }[0m[2m,[0m {
      [0msummary[2m:[0m [0m[32m[0m[32m"Schedule meeting"[0m[0m[0m[2m,[0m
      [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-10"[0m[0m[0m[2m,[0m
      [0mstartTime[2m:[0m [0m[32m[0m[32m"12:00"[0m[0m[0m[2m,[0m
      [0mendTime[2m:[0m [0m[32m[0m[32m"13:00"[0m[0m[0m[2m,[0m
      [0mduration_minutes[2m:[0m [0m[33m60[0m[0m[2m,[0m
      [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
      [0mlocation[2m:[0m [0m[32m[0m[32m"10 AM to 11 AM and lunch at 12 PM to 1 PM tomorrow"[0m[0m[0m[2m,[0m
      [0mdisplayTime[2m:[0m [0m[32m[0m[32m"12:00 pm"[0m[0m[0m[2m,[0m
    }
  ][0m[2m,[0m
  [0mconfirm[2m:[0m [0m[32m[0m[32m"Partial parse-confirm?"[0m[0m[0m[2m,[0m
}
Parsing Completed
Time Completed Parsing:  [0m[33m13521.759113[0m
[0m[1m4 |[0m [0m[35mimport[0m { describe, expect, test, jest } [0m[35mfrom[0m [0m[32m"bun:test"[0m[0m[2m;[0m
[0m[1m5 |[0m [0m[35mimport[0m { fileURLToPath } [0m[35mfrom[0m [0m[32m"url"[0m[0m[2m;[0m
[0m[1m6 |[0m 
[0m[1m7 |[0m [0m[35mfunction[0m parseNdjsonResponse(res: [0m[34many[0m): [0m[34many[0m[] {
[0m[1m8 |[0m   [0m[35mconst[0m chunks: [0m[34many[0m[] = [][0m[2m;[0m
[0m[1m9 |[0m   [0m[35mconst[0m lines = res.text[0m[3m[1m.split[0m([0m[32m"\n"[0m)[0m[3m[1m.filter[0m((line) => line[0m[3m[1m.trim[0m())[0m[2m;[0m
                             [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mres.text.split is not a function. (In 'res.text.split(`
`)', 'res.text.split' is undefined)[0m
[0m      [2mat [0m[0m[1m[3mparseNdjsonResponse[0m[2m ([0m[0m[36m[2m/home/kyle/Deployments/mcp-server-taskler/[0m[36msrc/tests/api/schedules-bun.test.ts[0m[2m:[0m[33m9[0m[2m:[33m26[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m[2m/home/kyle/Deployments/mcp-server-taskler/[0m[36msrc/tests/api/schedules-bun.test.ts[0m[2m:[0m[33m169[0m[2m:[33m20[0m[2m)[0m
[0m[31m✗[0m [0mAPI Endpoint : POST /mcp/tools/process-query[2m >[0m[1m should handle multi-events in one day add query ("add" intent)[0m [0m[2m[[0m[33m13525.95ms[0m[2m][0m

 0 pass[0m
[0m[31m 5 fail[0m
Ran 5 tests across 1 file. [0m[2m[[1m17.21s[0m[2m][0m
[1m[7m%[27m[1m[0m                                                                                    ]2;kyle@kyle:~/Deployments/mcp-server-taskler]1;..erver-taskler[0m[27m[24m[J[01;31m➜  [36mmcp-server-taskler[00m [01;34mgit:([31mframework-change[34m) [33m✗[00m [K[?1h=[?2004he[32me[39m[32me[39m[90mval "$(ssh-agent -s)" && ssh-add /ho[90mm[90me/kyle/.ssh/github-key  && gfgp[39m[K[A[16C[1B
[0;1;2mcommand[0m
[0me                    echo          echotc       echoti         edit           
edit-command-line    editor        editres      efibootdump    efibootmgr     
egrep                eject         elfedit      elif           else           
emulate              enable        enc2xs       encguess       enchant-2      
enchant-lsmod-2      end           enosys       env            env_default    
envsubst             eog           eps2eps      eqn            esac           
escapesrc            escp2topbm    eval         evince         evince-previewer
evince-thumbnailer   evolution     ex           exch           exec           
exit                 expand        expiry       export         expr           
exr2aces             exrenvmap     exrheader    exrinfo        exrmakepreview 
exrmaketiled         exrmanifest   exrmetrics   exrmultipart   exrmultiview   
[Jexrstdattr           [Jexr_to_pq     [Jeyuvtoppm    [Jeza            [J               [14A[0m[27m[24m[47C[32me[39m[90mval "$(ssh-agent -s)" && ssh-add /ho[90mm[90me/kyle/.ssh/github-key  && gfgp[39m[K[A[16C[32me[32mx[39m[K[1B[K[A[49C[90mit[39m[1B[J[0;1;2mcommand[0m
[0mex              exch            exec            exit            expand        
expiry          export          expr            exr2aces        exrenvmap     
exrheader       exrinfo         exrmakepreview  exrmaketiled    exrmanifest   
[Jexrmetrics      [Jexrmultipart    [Jexrmultiview    [Jexrstdattr      [Jexr_to_pq     [J[5A[0m[27m[24m[47C[32mex[39m[90mit[39m[K[32me[32mx[32mi[39m[1m[31me[1m[31mx[1m[31mi[0m[39m
[J[0;1;2mcommand[0m
[J[0mexit[J[A[A[0m[27m[24m[47C[1m[31mexi[0m[39m[90mt[39m[K[1m[31mi[1m[31mt[0m[39m[0m[32me[0m[32mx[0m[32mi[0m[32mt[39m
[J[0;1;2mcommand[0m
[J[0mexit[J[A[A[0m[27m[24m[47C[32mexit[39m[K[?1l>[?2004l
[J[A[51C
[J]2;exit]1;exit
Script done on 2025-10-14 22:14:26-07:00 [COMMAND_EXIT_CODE="1"]
