Script started on 2025-10-15 09:38:33-07:00 [COMMAND="  echo 'change directory to hono-server' &&   cd /home/kyle/Deployments/mcp-server-taskler &&   echo 'pull the latest code from github' &&   eval "$(ssh-agent -s)" && ssh-add /home/kyle/.ssh/github-key && git fetch && git pull &&   echo 'start the test' &&   bun test src/tests/api/schedules-bun.test.ts " TERM="xterm-256color" TTY="/dev/pts/1" COLUMNS="101" LINES="49"]
change directory to hono-server
pull the latest code from github
Agent pid 116076
Identity added: /home/kyle/.ssh/github-key (knguyen1193@outlook.com)
Already up to date.
start the test
[0m[1mbun test [0m[2mv1.3.0 (b0a6feca)[0m
[0m
src/tests/api/schedules-bun.test.ts:
[dotenv@17.2.3] injecting env (0) from .env [2m-- tip: 🗂️ backup and recover secrets: https://dotenvx.com/ops[0m
Loaded MODEL_PARSE: /home/kyle/.models/mistral-7b-instruct-v0.1.Q4_K_M.gguf
[]
User Input:  How are you doing?
classifyIntent is called
Intent returned :  other
response from LLM SERVER :  {
  [0mnatural_response[2m:[0m [0m[32m[0m[32m"I'm here to help with your schedule! What task can I assist with today?"[0m[0m[0m[2m,[0m
}
Generated response:  I'm here to help with your schedule! What task can I assist with today?
naturalResponse/other :  I'm here to help with your schedule! What task can I assist with today?
[0m[1m4 |[0m [0m[35mimport[0m { describe, expect, test, jest } [0m[35mfrom[0m [0m[32m"bun:test"[0m[0m[2m;[0m
[0m[1m5 |[0m [0m[35mimport[0m { fileURLToPath } [0m[35mfrom[0m [0m[32m"url"[0m[0m[2m;[0m
[0m[1m6 |[0m 
[0m[1m7 |[0m [0m[35mfunction[0m parseNdjsonResponse(res: [0m[34many[0m): [0m[34many[0m[] {
[0m[1m8 |[0m   [0m[35mconst[0m chunks: [0m[34many[0m[] = [][0m[2m;[0m
[0m[1m9 |[0m   [0m[35mconst[0m lines = res.text[0m[3m[1m.split[0m([0m[32m"\n"[0m)[0m[3m[1m.filter[0m((line) => line[0m[3m[1m.trim[0m())[0m[2m;[0m
                             [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mres.text.split is not a function. (In 'res.text.split(`
`)', 'res.text.split' is undefined)[0m
[0m      [2mat [0m[0m[1m[3mparseNdjsonResponse[0m[2m ([0m[0m[36m[2m/home/kyle/Deployments/mcp-server-taskler/[0m[36msrc/tests/api/schedules-bun.test.ts[0m[2m:[0m[33m9[0m[2m:[33m26[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m[2m/home/kyle/Deployments/mcp-server-taskler/[0m[36msrc/tests/api/schedules-bun.test.ts[0m[2m:[0m[33m49[0m[2m:[33m20[0m[2m)[0m
[0m[31m✗[0m [0mAPI Endpoint : POST /mcp/tools/process-query[2m >[0m[1m should handle chit-chat query ("other" intent)[0m [0m[2m[[1m1220.01ms[0m[2m][0m
[]
User Input:  What is 2 + 3 * 4?
classifyIntent is called
Intent returned :  other
response from LLM SERVER :  {
  [0mnatural_response[2m:[0m [0m[32m[0m[32m"Result: t. How does this relate to your schedule ? "[0m[0m[0m[2m,[0m
}
Generated response:  Result: t. How does this relate to your schedule ? 
naturalResponse/other :  Result: t. How does this relate to your schedule ? 
[0m[1m4 |[0m [0m[35mimport[0m { describe, expect, test, jest } [0m[35mfrom[0m [0m[32m"bun:test"[0m[0m[2m;[0m
[0m[1m5 |[0m [0m[35mimport[0m { fileURLToPath } [0m[35mfrom[0m [0m[32m"url"[0m[0m[2m;[0m
[0m[1m6 |[0m 
[0m[1m7 |[0m [0m[35mfunction[0m parseNdjsonResponse(res: [0m[34many[0m): [0m[34many[0m[] {
[0m[1m8 |[0m   [0m[35mconst[0m chunks: [0m[34many[0m[] = [][0m[2m;[0m
[0m[1m9 |[0m   [0m[35mconst[0m lines = res.text[0m[3m[1m.split[0m([0m[32m"\n"[0m)[0m[3m[1m.filter[0m((line) => line[0m[3m[1m.trim[0m())[0m[2m;[0m
                             [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mres.text.split is not a function. (In 'res.text.split(`
`)', 'res.text.split' is undefined)[0m
[0m      [2mat [0m[0m[1m[3mparseNdjsonResponse[0m[2m ([0m[0m[36m[2m/home/kyle/Deployments/mcp-server-taskler/[0m[36msrc/tests/api/schedules-bun.test.ts[0m[2m:[0m[33m9[0m[2m:[33m26[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m[2m/home/kyle/Deployments/mcp-server-taskler/[0m[36msrc/tests/api/schedules-bun.test.ts[0m[2m:[0m[33m78[0m[2m:[33m20[0m[2m)[0m
[0m[31m✗[0m [0mAPI Endpoint : POST /mcp/tools/process-query[2m >[0m[1m should handle computational-math query ("other" intent)[0m [0m[2m[[1m193.28ms[0m[2m][0m
[{"text":"tomorrow at 10 AM","start":"2025-10-10T17:00:00.000Z","end":null}]
User Input:  Schedule a meeting tomorrow at 10 AM in PDT
classifyIntent is called
events is parsed with regex:  [
  {
    [0msummary[2m:[0m [0m[32m[0m[32m"Event"[0m[0m[0m[2m,[0m
    [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-10"[0m[0m[0m[2m,[0m
    [0mstartTime[2m:[0m [0m[32m[0m[32m"10:00"[0m[0m[0m[2m,[0m
    [0mendTime[2m:[0m [0m[2mundefined[0m[0m[2m,[0m
    [0mduration_minutes[2m:[0m [0m[33m60[0m[0m[2m,[0m
    [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
    [0mlocation[2m:[0m [0m[32m[0m[32m"10 AM in PDT"[0m[0m[0m[2m,[0m
    [0mdisplayTime[2m:[0m [0m[32m[0m[32m"10:00 am"[0m[0m[0m[2m,[0m
  }
]
Regex partial imperfect-refining with LLM
Ready to send Payload:  {
  [0mpartial[2m:[0m {
    [0mevents[2m:[0m [
      [0m[36m[Object ...][0m
    ][0m[2m,[0m
    [0mconfirm[2m:[0m [0m[32m[0m[32m"Missing end time. Confirm default 60 minutes?"[0m[0m[0m[2m,[0m
  }[0m[2m,[0m
  [0minput[2m:[0m [0m[32m[0m[32m"Schedule a meeting tomorrow at 10 AM in PDT"[0m[0m[0m[2m,[0m
  [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
  [0mreference_date[2m:[0m [0m[32m[0m[32m"2025-10-15"[0m[0m[0m[2m,[0m
  [0mparsed_results[2m:[0m [
    {
      [0mtext[2m:[0m [0m[32m[0m[32m"tomorrow at 10 AM"[0m[0m[0m[2m,[0m
      [0mstart[2m:[0m [0m[32m[0m[32m"2025-10-10T17:00:00.000Z"[0m[0m[0m[2m,[0m
      [0mend[2m:[0m [0m[33mnull[0m[0m[2m,[0m
    }
  ][0m[2m,[0m
}
Refined from server:  {
  [0mevents[2m:[0m [
    {
      [0msummary[2m:[0m [0m[32m[0m[32m"Event"[0m[0m[0m[2m,[0m
      [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-10"[0m[0m[0m[2m,[0m
      [0mstartTime[2m:[0m [0m[32m[0m[32m"10:00"[0m[0m[0m[2m,[0m
      [0mendTime[2m:[0m [0m[2mundefined[0m[0m[2m,[0m
      [0mduration_minutes[2m:[0m [0m[33m60[0m[0m[2m,[0m
      [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
      [0mlocation[2m:[0m [0m[32m[0m[32m"10 AM in PDT"[0m[0m[0m[2m,[0m
      [0mdisplayTime[2m:[0m [0m[32m[0m[32m"10:00 am"[0m[0m[0m[2m,[0m
    }
  ][0m[2m,[0m
  [0mconfirm[2m:[0m [0m[32m[0m[32m"Partial parse-confirm?"[0m[0m[0m[2m,[0m
}
Parsing Completed
Time Completed Parsing:  [0m[33m3309.183724[0m
[0m[1m4 |[0m [0m[35mimport[0m { describe, expect, test, jest } [0m[35mfrom[0m [0m[32m"bun:test"[0m[0m[2m;[0m
[0m[1m5 |[0m [0m[35mimport[0m { fileURLToPath } [0m[35mfrom[0m [0m[32m"url"[0m[0m[2m;[0m
[0m[1m6 |[0m 
[0m[1m7 |[0m [0m[35mfunction[0m parseNdjsonResponse(res: [0m[34many[0m): [0m[34many[0m[] {
[0m[1m8 |[0m   [0m[35mconst[0m chunks: [0m[34many[0m[] = [][0m[2m;[0m
[0m[1m9 |[0m   [0m[35mconst[0m lines = res.text[0m[3m[1m.split[0m([0m[32m"\n"[0m)[0m[3m[1m.filter[0m((line) => line[0m[3m[1m.trim[0m())[0m[2m;[0m
                             [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mres.text.split is not a function. (In 'res.text.split(`
`)', 'res.text.split' is undefined)[0m
[0m      [2mat [0m[0m[1m[3mparseNdjsonResponse[0m[2m ([0m[0m[36m[2m/home/kyle/Deployments/mcp-server-taskler/[0m[36msrc/tests/api/schedules-bun.test.ts[0m[2m:[0m[33m9[0m[2m:[33m26[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m[2m/home/kyle/Deployments/mcp-server-taskler/[0m[36msrc/tests/api/schedules-bun.test.ts[0m[2m:[0m[33m107[0m[2m:[33m20[0m[2m)[0m
[0m[31m✗[0m [0mAPI Endpoint : POST /mcp/tools/process-query[2m >[0m[1m should handle single event add query ("add" intent)[0m [0m[2m[[1m3311.74ms[0m[2m][0m
[{"text":"October 1, 2025 from 10am to 11am","start":"2025-10-01T17:00:00.000Z","end":"2025-10-01T18:00:00.000Z"},{"text":"October 2, 2025 from 12pm to 1pm","start":"2025-10-02T19:00:00.000Z","end":"2025-10-02T20:00:00.000Z"},{"text":"October 3, 2025 from 2pm to 3pm","start":"2025-10-03T21:00:00.000Z","end":"2025-10-03T22:00:00.000Z"},{"text":"October 4, 2025 from 6am to 7am","start":"2025-10-04T13:00:00.000Z","end":"2025-10-04T14:00:00.000Z"},{"text":"October 5, 2025 from 8pm to 10pm","start":"2025-10-06T03:00:00.000Z","end":"2025-10-06T05:00:00.000Z"},{"text":"October 6, 2025 from 9am to 12pm","start":"2025-10-06T16:00:00.000Z","end":"2025-10-06T19:00:00.000Z"},{"text":"October 7, 2025 from 7pm to 8pm","start":"2025-10-08T02:00:00.000Z","end":"2025-10-08T03:00:00.000Z"}]
User Input:  Add events: Meeting on October 1, 2025 from 10am to 11am at office; Lunch on October 2, 2025 from 12pm to 1pm at cafe; Call on October 3, 2025 from 2pm to 3pm; Workout on October 4, 2025 from 6am to 7am at gym; Movie on October 5, 2025 from 8pm to 10pm at theater; Hiking on October 6, 2025 from 9am to 12pm at park; Dinner on October 7, 2025 from 7pm to 8pm at home
classifyIntent is called
events is parsed with regex:  [
  {
    [0msummary[2m:[0m [0m[32m[0m[32m"events: Meeting on October 1, 2025"[0m[0m[0m[2m,[0m
    [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-01"[0m[0m[0m[2m,[0m
    [0mstartTime[2m:[0m [0m[32m[0m[32m"10:00"[0m[0m[0m[2m,[0m
    [0mendTime[2m:[0m [0m[32m[0m[32m"11:00"[0m[0m[0m[2m,[0m
    [0mduration_minutes[2m:[0m [0m[33m60[0m[0m[2m,[0m
    [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
    [0mlocation[2m:[0m [0m[32m[0m[32m"office"[0m[0m[0m[2m,[0m
    [0mdisplayTime[2m:[0m [0m[32m[0m[32m"10:00 am"[0m[0m[0m[2m,[0m
  }[0m[2m,[0m {
    [0msummary[2m:[0m [0m[32m[0m[32m"Lunch on October 2, 2025"[0m[0m[0m[2m,[0m
    [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-02"[0m[0m[0m[2m,[0m
    [0mstartTime[2m:[0m [0m[32m[0m[32m"12:00"[0m[0m[0m[2m,[0m
    [0mendTime[2m:[0m [0m[32m[0m[32m"13:00"[0m[0m[0m[2m,[0m
    [0mduration_minutes[2m:[0m [0m[33m60[0m[0m[2m,[0m
    [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
    [0mlocation[2m:[0m [0m[32m[0m[32m"cafe"[0m[0m[0m[2m,[0m
    [0mdisplayTime[2m:[0m [0m[32m[0m[32m"12:00 pm"[0m[0m[0m[2m,[0m
  }[0m[2m,[0m {
    [0msummary[2m:[0m [0m[32m[0m[32m"Call on October 3, 2025"[0m[0m[0m[2m,[0m
    [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-03"[0m[0m[0m[2m,[0m
    [0mstartTime[2m:[0m [0m[32m[0m[32m"14:00"[0m[0m[0m[2m,[0m
    [0mendTime[2m:[0m [0m[32m[0m[32m"15:00"[0m[0m[0m[2m,[0m
    [0mduration_minutes[2m:[0m [0m[33m60[0m[0m[2m,[0m
    [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
    [0mlocation[2m:[0m [0m[33mnull[0m[0m[2m,[0m
    [0mdisplayTime[2m:[0m [0m[32m[0m[32m"14:00 pm"[0m[0m[0m[2m,[0m
  }[0m[2m,[0m {
    [0msummary[2m:[0m [0m[32m[0m[32m"Workout on October 4, 2025"[0m[0m[0m[2m,[0m
    [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-04"[0m[0m[0m[2m,[0m
    [0mstartTime[2m:[0m [0m[32m[0m[32m"06:00"[0m[0m[0m[2m,[0m
    [0mendTime[2m:[0m [0m[32m[0m[32m"07:00"[0m[0m[0m[2m,[0m
    [0mduration_minutes[2m:[0m [0m[33m60[0m[0m[2m,[0m
    [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
    [0mlocation[2m:[0m [0m[32m[0m[32m"gym"[0m[0m[0m[2m,[0m
    [0mdisplayTime[2m:[0m [0m[32m[0m[32m"06:00 am"[0m[0m[0m[2m,[0m
  }[0m[2m,[0m {
    [0msummary[2m:[0m [0m[32m[0m[32m"Movie on October 5, 2025"[0m[0m[0m[2m,[0m
    [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-05"[0m[0m[0m[2m,[0m
    [0mstartTime[2m:[0m [0m[32m[0m[32m"20:00"[0m[0m[0m[2m,[0m
    [0mendTime[2m:[0m [0m[32m[0m[32m"22:00"[0m[0m[0m[2m,[0m
    [0mduration_minutes[2m:[0m [0m[33m120[0m[0m[2m,[0m
    [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
    [0mlocation[2m:[0m [0m[32m[0m[32m"theater"[0m[0m[0m[2m,[0m
    [0mdisplayTime[2m:[0m [0m[32m[0m[32m"20:00 pm"[0m[0m[0m[2m,[0m
  }[0m[2m,[0m {
    [0msummary[2m:[0m [0m[32m[0m[32m"Hiking on October 6, 2025"[0m[0m[0m[2m,[0m
    [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-06"[0m[0m[0m[2m,[0m
    [0mstartTime[2m:[0m [0m[32m[0m[32m"09:00"[0m[0m[0m[2m,[0m
    [0mendTime[2m:[0m [0m[32m[0m[32m"12:00"[0m[0m[0m[2m,[0m
    [0mduration_minutes[2m:[0m [0m[33m180[0m[0m[2m,[0m
    [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
    [0mlocation[2m:[0m [0m[32m[0m[32m"park"[0m[0m[0m[2m,[0m
    [0mdisplayTime[2m:[0m [0m[32m[0m[32m"09:00 am"[0m[0m[0m[2m,[0m
  }[0m[2m,[0m {
    [0msummary[2m:[0m [0m[32m[0m[32m"Dinner on October 7, 2025"[0m[0m[0m[2m,[0m
    [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-07"[0m[0m[0m[2m,[0m
    [0mstartTime[2m:[0m [0m[32m[0m[32m"19:00"[0m[0m[0m[2m,[0m
    [0mendTime[2m:[0m [0m[32m[0m[32m"20:00"[0m[0m[0m[2m,[0m
    [0mduration_minutes[2m:[0m [0m[33m60[0m[0m[2m,[0m
    [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
    [0mlocation[2m:[0m [0m[32m[0m[32m"home"[0m[0m[0m[2m,[0m
    [0mdisplayTime[2m:[0m [0m[32m[0m[32m"19:00 pm"[0m[0m[0m[2m,[0m
  }
]
Regex partial imperfect-refining with LLM
Ready to send Payload:  {
  [0mpartial[2m:[0m [
    {
      [0msummary[2m:[0m [0m[32m[0m[32m"events: Meeting on October 1, 2025"[0m[0m[0m[2m,[0m
      [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-01"[0m[0m[0m[2m,[0m
      [0mstartTime[2m:[0m [0m[32m[0m[32m"10:00"[0m[0m[0m[2m,[0m
      [0mendTime[2m:[0m [0m[32m[0m[32m"11:00"[0m[0m[0m[2m,[0m
      [0mduration_minutes[2m:[0m [0m[33m60[0m[0m[2m,[0m
      [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
      [0mlocation[2m:[0m [0m[32m[0m[32m"office"[0m[0m[0m[2m,[0m
      [0mdisplayTime[2m:[0m [0m[32m[0m[32m"10:00 am"[0m[0m[0m[2m,[0m
    }[0m[2m,[0m {
      [0msummary[2m:[0m [0m[32m[0m[32m"Lunch on October 2, 2025"[0m[0m[0m[2m,[0m
      [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-02"[0m[0m[0m[2m,[0m
      [0mstartTime[2m:[0m [0m[32m[0m[32m"12:00"[0m[0m[0m[2m,[0m
      [0mendTime[2m:[0m [0m[32m[0m[32m"13:00"[0m[0m[0m[2m,[0m
      [0mduration_minutes[2m:[0m [0m[33m60[0m[0m[2m,[0m
      [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
      [0mlocation[2m:[0m [0m[32m[0m[32m"cafe"[0m[0m[0m[2m,[0m
      [0mdisplayTime[2m:[0m [0m[32m[0m[32m"12:00 pm"[0m[0m[0m[2m,[0m
    }[0m[2m,[0m {
      [0msummary[2m:[0m [0m[32m[0m[32m"Call on October 3, 2025"[0m[0m[0m[2m,[0m
      [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-03"[0m[0m[0m[2m,[0m
      [0mstartTime[2m:[0m [0m[32m[0m[32m"14:00"[0m[0m[0m[2m,[0m
      [0mendTime[2m:[0m [0m[32m[0m[32m"15:00"[0m[0m[0m[2m,[0m
      [0mduration_minutes[2m:[0m [0m[33m60[0m[0m[2m,[0m
      [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
      [0mlocation[2m:[0m [0m[33mnull[0m[0m[2m,[0m
      [0mdisplayTime[2m:[0m [0m[32m[0m[32m"14:00 pm"[0m[0m[0m[2m,[0m
    }[0m[2m,[0m {
      [0msummary[2m:[0m [0m[32m[0m[32m"Workout on October 4, 2025"[0m[0m[0m[2m,[0m
      [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-04"[0m[0m[0m[2m,[0m
      [0mstartTime[2m:[0m [0m[32m[0m[32m"06:00"[0m[0m[0m[2m,[0m
      [0mendTime[2m:[0m [0m[32m[0m[32m"07:00"[0m[0m[0m[2m,[0m
      [0mduration_minutes[2m:[0m [0m[33m60[0m[0m[2m,[0m
      [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
      [0mlocation[2m:[0m [0m[32m[0m[32m"gym"[0m[0m[0m[2m,[0m
      [0mdisplayTime[2m:[0m [0m[32m[0m[32m"06:00 am"[0m[0m[0m[2m,[0m
    }[0m[2m,[0m {
      [0msummary[2m:[0m [0m[32m[0m[32m"Movie on October 5, 2025"[0m[0m[0m[2m,[0m
      [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-05"[0m[0m[0m[2m,[0m
      [0mstartTime[2m:[0m [0m[32m[0m[32m"20:00"[0m[0m[0m[2m,[0m
      [0mendTime[2m:[0m [0m[32m[0m[32m"22:00"[0m[0m[0m[2m,[0m
      [0mduration_minutes[2m:[0m [0m[33m120[0m[0m[2m,[0m
      [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
      [0mlocation[2m:[0m [0m[32m[0m[32m"theater"[0m[0m[0m[2m,[0m
      [0mdisplayTime[2m:[0m [0m[32m[0m[32m"20:00 pm"[0m[0m[0m[2m,[0m
    }[0m[2m,[0m {
      [0msummary[2m:[0m [0m[32m[0m[32m"Hiking on October 6, 2025"[0m[0m[0m[2m,[0m
      [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-06"[0m[0m[0m[2m,[0m
      [0mstartTime[2m:[0m [0m[32m[0m[32m"09:00"[0m[0m[0m[2m,[0m
      [0mendTime[2m:[0m [0m[32m[0m[32m"12:00"[0m[0m[0m[2m,[0m
      [0mduration_minutes[2m:[0m [0m[33m180[0m[0m[2m,[0m
      [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
      [0mlocation[2m:[0m [0m[32m[0m[32m"park"[0m[0m[0m[2m,[0m
      [0mdisplayTime[2m:[0m [0m[32m[0m[32m"09:00 am"[0m[0m[0m[2m,[0m
    }[0m[2m,[0m {
      [0msummary[2m:[0m [0m[32m[0m[32m"Dinner on October 7, 2025"[0m[0m[0m[2m,[0m
      [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-07"[0m[0m[0m[2m,[0m
      [0mstartTime[2m:[0m [0m[32m[0m[32m"19:00"[0m[0m[0m[2m,[0m
      [0mendTime[2m:[0m [0m[32m[0m[32m"20:00"[0m[0m[0m[2m,[0m
      [0mduration_minutes[2m:[0m [0m[33m60[0m[0m[2m,[0m
      [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
      [0mlocation[2m:[0m [0m[32m[0m[32m"home"[0m[0m[0m[2m,[0m
      [0mdisplayTime[2m:[0m [0m[32m[0m[32m"19:00 pm"[0m[0m[0m[2m,[0m
    }
  ][0m[2m,[0m
  [0minput[2m:[0m [0m[32m[0m[32m"Add events: Meeting on October 1, 2025 from 10am to 11am at office; Lunch on October 2, 2025 from 12pm to 1pm at cafe; Call on October 3, 2025 from 2pm to 3pm; Workout on October 4, 2025 from 6am to 7am at gym; Movie on October 5, 2025 from 8pm to 10pm at theater; Hiking on October 6, 2025 from 9am to 12pm at park; Dinner on October 7, 2025 from 7pm to 8pm at home"[0m[0m[0m[2m,[0m
  [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
  [0mreference_date[2m:[0m [0m[32m[0m[32m"2025-10-15"[0m[0m[0m[2m,[0m
  [0mparsed_results[2m:[0m [
    {
      [0mtext[2m:[0m [0m[32m[0m[32m"October 1, 2025 from 10am to 11am"[0m[0m[0m[2m,[0m
      [0mstart[2m:[0m [0m[32m[0m[32m"2025-10-01T17:00:00.000Z"[0m[0m[0m[2m,[0m
      [0mend[2m:[0m [0m[32m[0m[32m"2025-10-01T18:00:00.000Z"[0m[0m[0m[2m,[0m
    }[0m[2m,[0m {
      [0mtext[2m:[0m [0m[32m[0m[32m"October 2, 2025 from 12pm to 1pm"[0m[0m[0m[2m,[0m
      [0mstart[2m:[0m [0m[32m[0m[32m"2025-10-02T19:00:00.000Z"[0m[0m[0m[2m,[0m
      [0mend[2m:[0m [0m[32m[0m[32m"2025-10-02T20:00:00.000Z"[0m[0m[0m[2m,[0m
    }[0m[2m,[0m {
      [0mtext[2m:[0m [0m[32m[0m[32m"October 3, 2025 from 2pm to 3pm"[0m[0m[0m[2m,[0m
      [0mstart[2m:[0m [0m[32m[0m[32m"2025-10-03T21:00:00.000Z"[0m[0m[0m[2m,[0m
      [0mend[2m:[0m [0m[32m[0m[32m"2025-10-03T22:00:00.000Z"[0m[0m[0m[2m,[0m
    }[0m[2m,[0m {
      [0mtext[2m:[0m [0m[32m[0m[32m"October 4, 2025 from 6am to 7am"[0m[0m[0m[2m,[0m
      [0mstart[2m:[0m [0m[32m[0m[32m"2025-10-04T13:00:00.000Z"[0m[0m[0m[2m,[0m
      [0mend[2m:[0m [0m[32m[0m[32m"2025-10-04T14:00:00.000Z"[0m[0m[0m[2m,[0m
    }[0m[2m,[0m {
      [0mtext[2m:[0m [0m[32m[0m[32m"October 5, 2025 from 8pm to 10pm"[0m[0m[0m[2m,[0m
      [0mstart[2m:[0m [0m[32m[0m[32m"2025-10-06T03:00:00.000Z"[0m[0m[0m[2m,[0m
      [0mend[2m:[0m [0m[32m[0m[32m"2025-10-06T05:00:00.000Z"[0m[0m[0m[2m,[0m
    }[0m[2m,[0m {
      [0mtext[2m:[0m [0m[32m[0m[32m"October 6, 2025 from 9am to 12pm"[0m[0m[0m[2m,[0m
      [0mstart[2m:[0m [0m[32m[0m[32m"2025-10-06T16:00:00.000Z"[0m[0m[0m[2m,[0m
      [0mend[2m:[0m [0m[32m[0m[32m"2025-10-06T19:00:00.000Z"[0m[0m[0m[2m,[0m
    }[0m[2m,[0m {
      [0mtext[2m:[0m [0m[32m[0m[32m"October 7, 2025 from 7pm to 8pm"[0m[0m[0m[2m,[0m
      [0mstart[2m:[0m [0m[32m[0m[32m"2025-10-08T02:00:00.000Z"[0m[0m[0m[2m,[0m
      [0mend[2m:[0m [0m[32m[0m[32m"2025-10-08T03:00:00.000Z"[0m[0m[0m[2m,[0m
    }
  ][0m[2m,[0m
}
Refined from server:  {
  [0mevents[2m:[0m [
    {
      [0msummary[2m:[0m [0m[32m[0m[32m"events: Meeting on October 1, 2025"[0m[0m[0m[2m,[0m
      [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-01"[0m[0m[0m[2m,[0m
      [0mstartTime[2m:[0m [0m[32m[0m[32m"10:00"[0m[0m[0m[2m,[0m
      [0mendTime[2m:[0m [0m[32m[0m[32m"11:00"[0m[0m[0m[2m,[0m
      [0mduration_minutes[2m:[0m [0m[33m60[0m[0m[2m,[0m
      [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
      [0mlocation[2m:[0m [0m[32m[0m[32m"office"[0m[0m[0m[2m,[0m
      [0mdisplayTime[2m:[0m [0m[32m[0m[32m"10:00 am"[0m[0m[0m[2m,[0m
    }[0m[2m,[0m {
      [0msummary[2m:[0m [0m[32m[0m[32m"Lunch on October 2, 2025"[0m[0m[0m[2m,[0m
      [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-02"[0m[0m[0m[2m,[0m
      [0mstartTime[2m:[0m [0m[32m[0m[32m"12:00"[0m[0m[0m[2m,[0m
      [0mendTime[2m:[0m [0m[32m[0m[32m"13:00"[0m[0m[0m[2m,[0m
      [0mduration_minutes[2m:[0m [0m[33m60[0m[0m[2m,[0m
      [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
      [0mlocation[2m:[0m [0m[32m[0m[32m"cafe"[0m[0m[0m[2m,[0m
      [0mdisplayTime[2m:[0m [0m[32m[0m[32m"12:00 pm"[0m[0m[0m[2m,[0m
    }[0m[2m,[0m {
      [0msummary[2m:[0m [0m[32m[0m[32m"Call on October 3, 2025"[0m[0m[0m[2m,[0m
      [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-03"[0m[0m[0m[2m,[0m
      [0mstartTime[2m:[0m [0m[32m[0m[32m"14:00"[0m[0m[0m[2m,[0m
      [0mendTime[2m:[0m [0m[32m[0m[32m"15:00"[0m[0m[0m[2m,[0m
      [0mduration_minutes[2m:[0m [0m[33m60[0m[0m[2m,[0m
      [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
      [0mlocation[2m:[0m [0m[33mnull[0m[0m[2m,[0m
      [0mdisplayTime[2m:[0m [0m[32m[0m[32m"14:00 pm"[0m[0m[0m[2m,[0m
    }[0m[2m,[0m {
      [0msummary[2m:[0m [0m[32m[0m[32m"Workout on October 4, 2025"[0m[0m[0m[2m,[0m
      [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-04"[0m[0m[0m[2m,[0m
      [0mstartTime[2m:[0m [0m[32m[0m[32m"06:00"[0m[0m[0m[2m,[0m
      [0mendTime[2m:[0m [0m[32m[0m[32m"07:00"[0m[0m[0m[2m,[0m
      [0mduration_minutes[2m:[0m [0m[33m60[0m[0m[2m,[0m
      [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
      [0mlocation[2m:[0m [0m[32m[0m[32m"gym"[0m[0m[0m[2m,[0m
      [0mdisplayTime[2m:[0m [0m[32m[0m[32m"06:00 am"[0m[0m[0m[2m,[0m
    }[0m[2m,[0m {
      [0msummary[2m:[0m [0m[32m[0m[32m"Movie on October 5, 2025"[0m[0m[0m[2m,[0m
      [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-05"[0m[0m[0m[2m,[0m
      [0mstartTime[2m:[0m [0m[32m[0m[32m"20:00"[0m[0m[0m[2m,[0m
      [0mendTime[2m:[0m [0m[32m[0m[32m"22:00"[0m[0m[0m[2m,[0m
      [0mduration_minutes[2m:[0m [0m[33m120[0m[0m[2m,[0m
      [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
      [0mlocation[2m:[0m [0m[32m[0m[32m"theater"[0m[0m[0m[2m,[0m
      [0mdisplayTime[2m:[0m [0m[32m[0m[32m"20:00 pm"[0m[0m[0m[2m,[0m
    }[0m[2m,[0m {
      [0msummary[2m:[0m [0m[32m[0m[32m"Hiking on October 6, 2025"[0m[0m[0m[2m,[0m
      [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-06"[0m[0m[0m[2m,[0m
      [0mstartTime[2m:[0m [0m[32m[0m[32m"09:00"[0m[0m[0m[2m,[0m
      [0mendTime[2m:[0m [0m[32m[0m[32m"12:00"[0m[0m[0m[2m,[0m
      [0mduration_minutes[2m:[0m [0m[33m180[0m[0m[2m,[0m
      [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
      [0mlocation[2m:[0m [0m[32m[0m[32m"park"[0m[0m[0m[2m,[0m
      [0mdisplayTime[2m:[0m [0m[32m[0m[32m"09:00 am"[0m[0m[0m[2m,[0m
    }[0m[2m,[0m {
      [0msummary[2m:[0m [0m[32m[0m[32m"Dinner on October 7, 2025"[0m[0m[0m[2m,[0m
      [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-07"[0m[0m[0m[2m,[0m
      [0mstartTime[2m:[0m [0m[32m[0m[32m"19:00"[0m[0m[0m[2m,[0m
      [0mendTime[2m:[0m [0m[32m[0m[32m"20:00"[0m[0m[0m[2m,[0m
      [0mduration_minutes[2m:[0m [0m[33m60[0m[0m[2m,[0m
      [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
      [0mlocation[2m:[0m [0m[32m[0m[32m"home"[0m[0m[0m[2m,[0m
      [0mdisplayTime[2m:[0m [0m[32m[0m[32m"19:00 pm"[0m[0m[0m[2m,[0m
    }
  ][0m[2m,[0m
  [0mconfirm[2m:[0m [0m[32m[0m[32m"Partial parse-confirm?"[0m[0m[0m[2m,[0m
}
Parsing Completed
Time Completed Parsing:  [0m[33m1059.458667[0m
[0m[1m4 |[0m [0m[35mimport[0m { describe, expect, test, jest } [0m[35mfrom[0m [0m[32m"bun:test"[0m[0m[2m;[0m
[0m[1m5 |[0m [0m[35mimport[0m { fileURLToPath } [0m[35mfrom[0m [0m[32m"url"[0m[0m[2m;[0m
[0m[1m6 |[0m 
[0m[1m7 |[0m [0m[35mfunction[0m parseNdjsonResponse(res: [0m[34many[0m): [0m[34many[0m[] {
[0m[1m8 |[0m   [0m[35mconst[0m chunks: [0m[34many[0m[] = [][0m[2m;[0m
[0m[1m9 |[0m   [0m[35mconst[0m lines = res.text[0m[3m[1m.split[0m([0m[32m"\n"[0m)[0m[3m[1m.filter[0m((line) => line[0m[3m[1m.trim[0m())[0m[2m;[0m
                             [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mres.text.split is not a function. (In 'res.text.split(`
`)', 'res.text.split' is undefined)[0m
[0m      [2mat [0m[0m[1m[3mparseNdjsonResponse[0m[2m ([0m[0m[36m[2m/home/kyle/Deployments/mcp-server-taskler/[0m[36msrc/tests/api/schedules-bun.test.ts[0m[2m:[0m[33m9[0m[2m:[33m26[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m[2m/home/kyle/Deployments/mcp-server-taskler/[0m[36msrc/tests/api/schedules-bun.test.ts[0m[2m:[0m[33m137[0m[2m:[33m20[0m[2m)[0m
[0m[31m✗[0m [0mAPI Endpoint : POST /mcp/tools/process-query[2m >[0m[1m should handle multi-days events add query ("add" intent with refinement)[0m [0m[2m[[1m1062.36ms[0m[2m][0m
[{"text":"at 10 AM to 11 AM","start":"2025-10-10T17:00:00.000Z","end":"2025-10-10T18:00:00.000Z"},{"text":"at 12 PM to 1 PM","start":"2025-10-10T19:00:00.000Z","end":"2025-10-10T20:00:00.000Z"}]
User Input:  Schedule meeting at 10 AM to 11 AM and lunch at 12 PM to 1 PM tomorrow
classifyIntent is called
events is parsed with regex:  [
  {
    [0msummary[2m:[0m [0m[32m[0m[32m"Schedule meeting"[0m[0m[0m[2m,[0m
    [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-10"[0m[0m[0m[2m,[0m
    [0mstartTime[2m:[0m [0m[32m[0m[32m"10:00"[0m[0m[0m[2m,[0m
    [0mendTime[2m:[0m [0m[32m[0m[32m"11:00"[0m[0m[0m[2m,[0m
    [0mduration_minutes[2m:[0m [0m[33m60[0m[0m[2m,[0m
    [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
    [0mlocation[2m:[0m [0m[32m[0m[32m"10 AM to 11 AM and lunch at 12 PM to 1 PM tomorrow"[0m[0m[0m[2m,[0m
    [0mdisplayTime[2m:[0m [0m[32m[0m[32m"10:00 am"[0m[0m[0m[2m,[0m
  }[0m[2m,[0m {
    [0msummary[2m:[0m [0m[32m[0m[32m"Schedule meeting"[0m[0m[0m[2m,[0m
    [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-10"[0m[0m[0m[2m,[0m
    [0mstartTime[2m:[0m [0m[32m[0m[32m"12:00"[0m[0m[0m[2m,[0m
    [0mendTime[2m:[0m [0m[32m[0m[32m"13:00"[0m[0m[0m[2m,[0m
    [0mduration_minutes[2m:[0m [0m[33m60[0m[0m[2m,[0m
    [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
    [0mlocation[2m:[0m [0m[32m[0m[32m"10 AM to 11 AM and lunch at 12 PM to 1 PM tomorrow"[0m[0m[0m[2m,[0m
    [0mdisplayTime[2m:[0m [0m[32m[0m[32m"12:00 pm"[0m[0m[0m[2m,[0m
  }
]
Regex partial imperfect-refining with LLM
Ready to send Payload:  {
  [0mpartial[2m:[0m [
    {
      [0msummary[2m:[0m [0m[32m[0m[32m"Schedule meeting"[0m[0m[0m[2m,[0m
      [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-10"[0m[0m[0m[2m,[0m
      [0mstartTime[2m:[0m [0m[32m[0m[32m"10:00"[0m[0m[0m[2m,[0m
      [0mendTime[2m:[0m [0m[32m[0m[32m"11:00"[0m[0m[0m[2m,[0m
      [0mduration_minutes[2m:[0m [0m[33m60[0m[0m[2m,[0m
      [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
      [0mlocation[2m:[0m [0m[32m[0m[32m"10 AM to 11 AM and lunch at 12 PM to 1 PM tomorrow"[0m[0m[0m[2m,[0m
      [0mdisplayTime[2m:[0m [0m[32m[0m[32m"10:00 am"[0m[0m[0m[2m,[0m
    }[0m[2m,[0m {
      [0msummary[2m:[0m [0m[32m[0m[32m"Schedule meeting"[0m[0m[0m[2m,[0m
      [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-10"[0m[0m[0m[2m,[0m
      [0mstartTime[2m:[0m [0m[32m[0m[32m"12:00"[0m[0m[0m[2m,[0m
      [0mendTime[2m:[0m [0m[32m[0m[32m"13:00"[0m[0m[0m[2m,[0m
      [0mduration_minutes[2m:[0m [0m[33m60[0m[0m[2m,[0m
      [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
      [0mlocation[2m:[0m [0m[32m[0m[32m"10 AM to 11 AM and lunch at 12 PM to 1 PM tomorrow"[0m[0m[0m[2m,[0m
      [0mdisplayTime[2m:[0m [0m[32m[0m[32m"12:00 pm"[0m[0m[0m[2m,[0m
    }
  ][0m[2m,[0m
  [0minput[2m:[0m [0m[32m[0m[32m"Schedule meeting at 10 AM to 11 AM and lunch at 12 PM to 1 PM tomorrow"[0m[0m[0m[2m,[0m
  [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
  [0mreference_date[2m:[0m [0m[32m[0m[32m"2025-10-15"[0m[0m[0m[2m,[0m
  [0mparsed_results[2m:[0m [
    {
      [0mtext[2m:[0m [0m[32m[0m[32m"at 10 AM to 11 AM"[0m[0m[0m[2m,[0m
      [0mstart[2m:[0m [0m[32m[0m[32m"2025-10-10T17:00:00.000Z"[0m[0m[0m[2m,[0m
      [0mend[2m:[0m [0m[32m[0m[32m"2025-10-10T18:00:00.000Z"[0m[0m[0m[2m,[0m
    }[0m[2m,[0m {
      [0mtext[2m:[0m [0m[32m[0m[32m"at 12 PM to 1 PM"[0m[0m[0m[2m,[0m
      [0mstart[2m:[0m [0m[32m[0m[32m"2025-10-10T19:00:00.000Z"[0m[0m[0m[2m,[0m
      [0mend[2m:[0m [0m[32m[0m[32m"2025-10-10T20:00:00.000Z"[0m[0m[0m[2m,[0m
    }
  ][0m[2m,[0m
}
response from LLM SERVER :  {
  [0mnatural_response[2m:[0m [0m[32m[0m[32m"Here's a professional confirmation response:\n\n\"Event Confirmation: [naturalSummary]\"\n\nDate and Time Details:\n\"[date], at \"[startTime]\" PDT (Pacific Daylight Time), which is equivalent to UTC-7.\"\n\nDuration of the Event:\n\"The event will last for approximately {[duration_minutes]} minutes, starting from its scheduled start time on ([date])."[0m[0m[0m[2m,[0m
}
Generated response:  Here's a professional confirmation response:

"Event Confirmation: [naturalSummary]"

Date and Time Details:
"[date], at "[startTime]" PDT (Pacific Daylight Time), which is equivalent to UTC-7."

Duration of the Event:
"The event will last for approximately {[duration_minutes]} minutes, starting from its scheduled start time on ([date]).
Natural Response generated with intent add in 2340.918996 
Refined from server:  {
  [0mevents[2m:[0m [
    {
      [0msummary[2m:[0m [0m[32m[0m[32m"Schedule meeting"[0m[0m[0m[2m,[0m
      [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-10"[0m[0m[0m[2m,[0m
      [0mstartTime[2m:[0m [0m[32m[0m[32m"10:00"[0m[0m[0m[2m,[0m
      [0mendTime[2m:[0m [0m[32m[0m[32m"11:00"[0m[0m[0m[2m,[0m
      [0mduration_minutes[2m:[0m [0m[33m60[0m[0m[2m,[0m
      [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
      [0mlocation[2m:[0m [0m[32m[0m[32m"10 AM to 11 AM and lunch at 12 PM to 1 PM tomorrow"[0m[0m[0m[2m,[0m
      [0mdisplayTime[2m:[0m [0m[32m[0m[32m"10:00 am"[0m[0m[0m[2m,[0m
    }[0m[2m,[0m {
      [0msummary[2m:[0m [0m[32m[0m[32m"Schedule meeting"[0m[0m[0m[2m,[0m
      [0mdate[2m:[0m [0m[32m[0m[32m"2025-10-10"[0m[0m[0m[2m,[0m
      [0mstartTime[2m:[0m [0m[32m[0m[32m"12:00"[0m[0m[0m[2m,[0m
      [0mendTime[2m:[0m [0m[32m[0m[32m"13:00"[0m[0m[0m[2m,[0m
      [0mduration_minutes[2m:[0m [0m[33m60[0m[0m[2m,[0m
      [0mtimezone[2m:[0m [0m[32m[0m[32m"America/Los_Angeles"[0m[0m[0m[2m,[0m
      [0mlocation[2m:[0m [0m[32m[0m[32m"10 AM to 11 AM and lunch at 12 PM to 1 PM tomorrow"[0m[0m[0m[2m,[0m
      [0mdisplayTime[2m:[0m [0m[32m[0m[32m"12:00 pm"[0m[0m[0m[2m,[0m
    }
  ][0m[2m,[0m
  [0mconfirm[2m:[0m [0m[32m[0m[32m"Partial parse-confirm?"[0m[0m[0m[2m,[0m
}
Parsing Completed
Time Completed Parsing:  [0m[33m4655.499305[0m
[0m[1m4 |[0m [0m[35mimport[0m { describe, expect, test, jest } [0m[35mfrom[0m [0m[32m"bun:test"[0m[0m[2m;[0m
[0m[1m5 |[0m [0m[35mimport[0m { fileURLToPath } [0m[35mfrom[0m [0m[32m"url"[0m[0m[2m;[0m
[0m[1m6 |[0m 
[0m[1m7 |[0m [0m[35mfunction[0m parseNdjsonResponse(res: [0m[34many[0m): [0m[34many[0m[] {
[0m[1m8 |[0m   [0m[35mconst[0m chunks: [0m[34many[0m[] = [][0m[2m;[0m
[0m[1m9 |[0m   [0m[35mconst[0m lines = res.text[0m[3m[1m.split[0m([0m[32m"\n"[0m)[0m[3m[1m.filter[0m((line) => line[0m[3m[1m.trim[0m())[0m[2m;[0m
                             [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mres.text.split is not a function. (In 'res.text.split(`
`)', 'res.text.split' is undefined)[0m
[0m      [2mat [0m[0m[1m[3mparseNdjsonResponse[0m[2m ([0m[0m[36m[2m/home/kyle/Deployments/mcp-server-taskler/[0m[36msrc/tests/api/schedules-bun.test.ts[0m[2m:[0m[33m9[0m[2m:[33m26[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m[2m/home/kyle/Deployments/mcp-server-taskler/[0m[36msrc/tests/api/schedules-bun.test.ts[0m[2m:[0m[33m169[0m[2m:[33m20[0m[2m)[0m
[0m[31m✗[0m [0mAPI Endpoint : POST /mcp/tools/process-query[2m >[0m[1m should handle multi-events in one day add query ("add" intent)[0m [0m[2m[[1m4659.92ms[0m[2m][0m

 0 pass[0m
[0m[31m 5 fail[0m
Ran 5 tests across 1 file. [0m[2m[[1m10.53s[0m[2m][0m

Script done on 2025-10-15 09:38:47-07:00 [COMMAND_EXIT_CODE="1"]
